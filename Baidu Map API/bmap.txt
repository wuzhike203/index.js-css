//百度地图
一、总对象  BMap

二、控件对象
	1、Control：控件的抽象基类。所有控件均继承它。通过此类可以实现自定义控件。
	2、NavigationControl：平移缩放控件
	3、OverviewMapControl：缩略地图控件
	4、ScaleControl：比例尺控件
	5、MapTypeControl：地图类型控件（二维，三维，全景）
	6、CopyrightControl：版本控件

	//创建控件对象
		//opts：一个可选的控件参数{anchor:"",offset:"",...}
		//anchor:表示控件位置   BMAP_ANCHOR_TOP_LEFT     --地图的左上角
		//			BMAP_ANCHOR_TOP_RIGHT     --地图的右上角
		//			BMAP_ANCHOR_BOTTOM_LEFT   --地图的左下角
		//			BMAP_ANCHOR_BOTTOM_RIGHT  --地图的右下角
		//offset：偏移       大小对象，如：new BMap.Size(150, 5)
	new BMap.NavigationControl(opts)
	//添加控件
	map.addControl(控件对象)

三、覆盖物
	1、Overlay：覆盖物的抽象基类，所有的覆盖物均继承此类的方法。
	2、Marker：标注表示地图上的点，可自定义标注的图标。
	3、Label：表示地图上的文本标注，您可以自定义标注的文本内容。
	4、Polyline：表示地图上的折线。
	5、Polygon：表示地图上的多边形。多边形类似于闭合的折线，另外您也可以为其添加填充颜色。
	6、Circle: 表示地图上的圆。
	7、InfoWindow：信息窗口也是一种特殊的覆盖物，它可以展示更为丰富的文字和多媒体信息。
			//*注意：同一时刻只能有一个信息窗口在地图上打开。

	//point：代表点对象，opts：可选参数对象，Icon：图标对象
	//创建覆盖物
	2、Marker(point, opts)    //opts:{icon:Icon}
		//marker.setIcon()方法 ：自定义标注图标
		//2.1 添加监控事件
		marker.addEventListener("click", function(){    
			alert("您点击了标注");    
		});
		//2.2 拖拽
			enableDragging    //开启标注的拖拽功能
			disableDragging   //关闭标注的拖拽功能
			marker.addEventListener("dragend", function(e){    
			     alert("当前位置：" + e.point.lng + ", " + e.point.lat);    
			})
	3、InfoWindow(内容,opts)
		var opts = {    
		 width : 250,     // 信息窗口宽度    
		 height: 100,     // 信息窗口高度    
		 title : "Hello"  // 信息窗口标题   
		}  
		//创建InfoWindow
		var infoWindow = new BMap.InfoWindow("World", opts);  // 创建信息窗口对象    
		//打开InfoWindow
		map.openInfoWindow(infoWindow, map.getCenter());      // 打开信息窗口
	4、Polyline表示地图上的折线覆盖物。
		//它包含一组点，并将这些点连接起来形成折线
		var opts = {strokeColor:"blue", strokeWeight:6, strokeOpacity:0.5};
		var polyline = new BMap.Polyline([    
		   new BMap.Point(116.399, 39.910),    
		   new BMap.Point(116.405, 39.920)    
		 ],    
		  opts   
		);    
		map.addOverlay(polyline);
	//添加覆盖物
	map.addOverlay(覆盖物对象)
	//移除覆盖物(注意此方法不适用于InfoWindow)
	map.removeOverlay()

四、事件
	1、click
	2、dbclick
	3、dragend    //拖放结束
	4、zoomend    //缩放结束

	//事件对象
	e参数至少包含事件类型（type）和触发该事件的对象（target）。 
		API还保证函数内的this指向触发（同时也是绑定）事件的API对象。
		
	//添加事件
	addEventListener(obj,func)
	//移除事件
	removeEventListener(obj,func)

三、
	1、Size(100,20) :大小对象 
	2、Point(116.404, 39.915) ：点对象
		属性 lng: 纬度
		     lat: 经度
	3、图标对象Icon(url,size,{offset:size,imageOffset:size})
		var myIcon = new BMap.Icon("markers.png", new BMap.Size(23, 25), {    
		// 指定定位位置。   
		// 当标注显示在地图上时，其所指向的地理位置距离图标左上    
		// 角各偏移10像素和25像素。您可以看到在本例中该位置即是   
		   // 图标中央下端的尖角位置。    
		   offset: new BMap.Size(10, 25),    
		   // 设置图片偏移。   
		   // 当您需要从一幅较大的图片中截取某部分作为标注图标时，您   
		   // 需要指定大图的偏移位置，此做法与css sprites技术类似。    
		   imageOffset: new BMap.Size(0, 25)   // 设置图片偏移    
		 });      

四、
	1、map.setCurrentCity("北京"); // 仅当设置城市信息时
	2、var bounds = map.getBounds();  //获取当前可见区域内的坐标信息   
		//bounds.maxX   可见区域的最大X 
		//bounds.minX   可见区域的最小X   
		//bounds.maxY   可见区域的最大Y 
		//bounds.minY   可见区域的最小Y 
	3、map.getCenter()    //获取地图中心点
	4、map.getZoom()      //获得地图缩放级别
	5、panTo()    //方法将让地图平滑移动至新中心点，如果移动距离超过了当前地图区域大小，则地图会直跳到该点。 
	6、zoomTo()   