###################################################
#
# 本页记录移动端与PC端的JS，CSS的差异
# 16-09-13 23:00:28  @wuji
#
##################################################

//-----------差异-------------------
1、鼠标、键盘交互被触摸、手势代替
    1. 当手指触摸屏幕时, 发生 touchstart 事件
    2. 如果手指移动，则发生 touchmove 事件
    3. 当手机离开屏幕时, 则发生 touchend 事件
    4. 如果在此期间手指没有移动过, 且此期间小于某个数值, 则发生 click 事件。
        即：如果手指在期间移动过 或 此期间大于某个数值(即使没有移动)，则不会发生 click 事件。
    5. scroll 事件是独立的，pc端与移动端都一样。

2、html, body{height: 100%} 的作用
    2.1 每个网页都有个viewport 宽度
        html 继承 viewport, body 继承 html ......
        // 设定body的总高度，当在移动端时, 软键盘不会遮挡住输入框。
    2.2 一般地，
        当表单处于焦点时,软键盘出现：浏览器高度由于软键盘的出现而发生resize事件，减少。
        当失去焦点时, 软键盘消失: 与上相反。

3、点击 <a href="#target">点击</a> 的作用
    等同于： location.href = "#target";
    // 实现在页面内不同位置跳转
        
4、不支持hover事件

5、移动端底部input 样式布局问题及解决方案(例如ios第三方输入法遮挡输入框)
    // http://www.thinksaas.cn/topics/0/606/606825.html
    问题1： H5web移动端输入框, 键盘唤起后fixed定位好的元素跟随页面滚动了起来… 
            fixed属性失效了！满屏任性横飞
    解决思路:
            不让页面整体滚动(body高度等于或小于浏览器高度), 绝对布局滚动内容, 局部滚动.
    // ------  HTML
        <body> 
            <!-- 可以滚动的区域 -->
            <main className='scrollWrapper'>
                <!-- 内容在这里... -->
            </main>
            
            <!-- fixed定位在底部的输入框 -->
            <footer>
               <div className='inputBox' contenteditable='true' placeholder='请输入评论'></div>
            </footer>
        </body>

    // ----- CSS
        .scrollWrapper {
            position: absolute;/* 绝对定位，进行内部滚动 */
            left: 0;
            right: 0;
            top: 0;
            bottom: 0;
            overflow-y: atuo;/* 或者scroll */
            -webkit-overflow-scrolling: touch;/* 解决ios滑动不流畅问题 */
        }
        footer {
            position: fixed;
        }

    问题2： 有第三方输入法的ios机还会出现键盘弹出延迟，
            导致普通布局 输入框(input/textarea等) 位置靠下的被键盘挡住
    解决思路:
        键盘完全弹出时, 判断键盘是否在可视区域(即屏幕除去键盘占用的区域)
        通过js来调整输入框的位置;
        键盘完全收起后, 调整键盘到页面底部;

6、我们使用 H5 做移动 App，或者进行移动网站开发时。
    如果文本输入框在整个页面的下方，当我们点击输入框要输入文字时，
    系统弹出的虚拟键盘就会将输入框给挡住。
    // http://www.680.com/Soft/1609/chengxu-43733.html

    解决办法：
        我们可以借助元素的 scrollIntoViewIfNeeded（） 方法。
        这个方法执行后如果当前元素在视口中不可见，则会滚动浏览器窗口或容器元素，最终让它可见。
        如果当前元素在视口中已经是可见的，这个方法什么也不做。
    
    示例：
        这里使用了 jQuery 绑定了所有输入框（textinput、textarea）的点击事件，
        这样当输入框被点击后就调用它的 scrollIntoViewIfNeeded（） 方法，保证输入框可见。
        （延迟400毫秒出现时有些 Android 手机键盘出现的比较慢）
    $('input[type="text"],textarea').on('click', function(){
    　　var target = this;
    　　setTimeout(function(){
            target.scrollIntoViewIfNeeded()；
    　　},400)；
　　})；

7、移动端弹出软键盘(亲测)
    表单获取焦点时，可以自动弹出软键盘。
    但移动端如果绑定click 事件，andriod手机可以，iphone不可以。
        最好是只绑定 touchend 事件
        // 不能同时绑定touchend和click事件







//----------思想差异：-------------
1、 PC  端，一般用像素980px定宽；
    移动端，一般用百分比,em,rem。

2、移动端按钮要适中，不能太小: 适合手指点击。

3、移动端尽量少用图片。


//----------移动端媒体查询的一些尺寸参考-------------

<meta charset="UTF-8" />
<meta name="renderer" content="webkit" />
<meta http-equiv="X-UA-Compatible" content="IE=EDGE, chrome=1">  
<meta name="viewport" content="width=device-width, target-densitydpi=hight-dpi, height=device-height, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
<meta name="msapplication-tap-highlight" content="no" />
<meta name="format-detection" content="telephone=no" />  




/* 兼容iphone5 */
/@media (device-height:568px) and (-webkit-min-device-pixel-ratio:2){ }

/*6*/
@media (min-device-width : 375px) and (max-device-width : 667px) and (-webkit-min-device-pixel-ratio : 2){ }

/*6+*/
@media (min-device-width : 414px) and (max-device-width : 736px) and (-webkit-min-device-pixel-ratio : 3){ }

/*魅族*/
@media only screen and (min-device-width :1080px) and (-webkit-min-device-pixel-ratio : 2.5){ }

/*mate7*/
@media only screen and (min-device-width :1080px) and (-webkit-min-device-pixel-ratio : 3){ }

/*4 4s*/
@media only screen and (device-height :480px) and (-webkit-device-pixel-ratio:2){ }

@media screen and (min-width: 320px) and (max-width: 480px) {  }

/* 平板之类的宽度 1024 以下设备 */
@media only screen and (min-width: 321px) and (max-width: 1024px) {
    body {
        background: blue;
    }
}

/* PC客户端或大屏幕设备: 1028px 至更大 */
@media only screen and (min-width: 1029px) {
body {
background: green;
}
}

/* 竖屏 */
@media screen and (orientation:portrait) and (max-width: 720px) {对应样式}

/* 横屏 */
@media screen and (orientation:landscape){对应样式}

iPhone5s 504*320


// 移动端
    <meta name="viewport" 
            content="width=device-width,             // 视图窗口的宽度
                    initial-scale=1.0,
                    minimum-scale=1.0,
                    maximum-scale=1.0,
                    user-scalable=no" 
    />
    // 已不支持：target-densitydpi   视图窗口的分辨率 不同于  物理分辨率

// 16-10-31 15:00:09 
    手机屏幕分辨率相差甚大。
    iphone5: 320*568
    mate8: 1080*1920
    故 @media 分开：
    1、针对iphone系列：(min-resolution:130dpi) and (max-device-width:500px)
            最大屏幕宽度尺寸：500/130 = 3.9(英寸)
    2、针对mate8系列：(min-resolution: 270dpi) and (max-device-width: 1080px)
            最大屏幕宽度尺寸：1080/270 = 4(英寸)

    // 即：当屏幕宽度尺寸超过4英寸时，就不再加载移动样式

// 16-12-28 09:22:56 
    移动端滚动条不可见

// media query适应响应式布局总结：
    // 假定UI的psd是以640px宽度为基础, @s:每个区域中的比例系数
    // 以下区域不分横竖屏，
    // 竖屏：and (orientation:portrait)
    // 横屏：and (orientation:landscape)
    @media screen and (min-device-width: 1100px){
        // pc端
        // 1000px
        // 尺寸: 1000
        // @s: 1.8
    }

    @media screen 
        and (max-device-width: 1100px)
        and (max-width: 340px)
    {
        // <=340px
        // 适合iphone4,5,少部分安卓手机
        // 以320px为主
        // i4尺寸：3.5，i5尺寸：4
        // @s: (640/320)*3.5/4 = 1.75,
        // @s: 2
    }

    @media screen 
        and (max-device-width: 1100px)
        and (min-width: 341px)
        and (max-width: 390px)
    {
        // 341px ~ 390px
        // 适合ipone6, 大部分安卓手机 
        // 以360px(安卓), 375px(iphone6)为主
        // i6尺寸：4.7， 目前大部分安卓手机:5~5.5
        // @s: (640/375)*4.7/4 = 2.0,  @s: (640/360)*(5~5.5)/4 = 2.22~2.44,
        // 考虑到屏幕尺寸大，元素尺寸适当大一些，故：
        // @s: 1.92,   @s: 2.1
    }

    @media screen 
        and (max-device-width: 1100px)
        and (min-width: 391px)
        and (max-width: 450px)
    {
        // 391px ~ 450px
        // 适合少部分安卓手机:Nexus5X, Nexus6P, iphone6P
        // 尺寸                 5.2     5.7         5.5
        // 以414px为主
        // @s: (640/414)*(5~5.5)/4 = 1.93~2.13
        // 考虑到屏幕尺寸大，元素尺寸适当大一些，故：
        // @s: 2

    }

    @media screen 
        and (max-device-width: 1100px)
        and (min-width: 451px)
        and (max-width: 510px)
    {
        // 451px ~ 510px
        // 目前还么发现手机处于这一区域
        // 

    }

    @media screen 
        and (max-device-width: 1100px)
        and (min-width: 511px)
        and (max-width: 600px)
    {
        // 511px ~ 600px
        // 少部分安卓手机
        // 以540px为主
        // @s: 1.20

    }

    @media screen 
        and (max-device-width: 1100px)
        and (min-width: 601px)
        and (max-width: 660px)
    {
        // 601px ~ 660px
        // 少部分安卓手机
        // 以600px/640px为主
        // 这个区域的手机尺寸比较大，以6~7为主
        // @s: 1*(6~7)/4 = 1.5~1.75

    }

    @media screen 
        and (max-device-width: 1100px)
        and (min-width: 661px)
        and (max-width: 900px)
    {
        // 661px ~ 900px
        // 很少部分安卓手机: Nexus: 10(800*1280)
        // 以800px为主
        // @s: 1.2

    }

    @media screen 
        and (max-device-width: 1100px)
        and (min-width: 901px)
        and (max-width: 1100px)
    {
        // >901px
        // 很少部分安卓手机
        // 以1080px为主
        // 这个区域的手机尺寸比较大，以6~7为主
        // @s: (640/1080)*(6~7)/4 = 0.89~1.03

    }

// 17-05-10 媒体查询 实际参数(less)
    // 文字用px, 可以保持物理尺寸不变
    // 图片用rem, 保持随屏幕的增加而增大

    @media (max-width: 340px){
        html { font-size: 10px; }
    }

    @media (max-width: 370px) and (min-width: 341px){
        html { font-size: 11.25px; }
    }

    @media (max-width: 390px) and (min-width: 371px){
        html { font-size: 11.72px; }
    }

    @media (max-width: 450px) and (min-width: 391px){
        html { font-size: 12.94px; }
    }

    @media (max-width: 768px) and (min-width: 451px){
        html { font-size: 16.875px; }
    }

