<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><meta name="generator" content="JsDoc Toolkit 1.0"><title>JsDoc: </title><link rel=stylesheet href="css/default.css" type="text/css" media=screen></head><body><div class="content"><div class="docs"><div class="jump">JUMP: [<a href="#const_summary">CONSTRUCTORS</a> ] [ <a href="#functions_summary">FUNCTIONS</a> ] [ <a href="#objects_summary">PROPERTIES</a> ]</div><hr><div class="libHead">Library: String.js			</div><div class="section overview"><div class="itemTitle">					Overview				</div><div><div class="desc">String is one of the core classes to native JavaScript. Here, String mixes in the jsx.collections.Enumerable class which gives String a lot more functionalilty. See jsx.collections.Enumerable to see all the enumerable methods on String</div><div class="itemTags"><ul><li>source: <a href="src_48.htm">String.js</a></li><li>example: </li></ul></div></div></div><div class="sectionHead">Constructors</div><a name="const_summary"></a><div class="section constructor"><div class="itemTitle"><a name="String"></a>																				String(<span class="signature"></span>)														</div><div class="desc">[built-in]</div><div class="detailHead">methods</div><ul class="details"><li><a href="#String.charAt" style="font-weight:bold;">charAt</a><b>(_index)</b> - Returns the character at a specified position.</li></ul><ul class="details"><li><a href="#String.charCodeAt" style="font-weight:bold;">charCodeAt</a><b>(_index)</b> - Returns the Unicode of the character at a specified position.</li></ul><ul class="details"><li><a href="#String.concat" style="font-weight:bold;">concat</a><b>()</b> - Joins two or more strings.</li></ul><ul class="details"><li><a href="#String.indexOf" style="font-weight:bold;">indexOf</a><b>(_string, _start)</b> - Returns the position of the first occurrence of a specified string value in a string.</li></ul><ul class="details"><li><a href="#String.lastIndexOf" style="font-weight:bold;">lastIndexOf</a><b>(_string, _start)</b> - Returns the position of the last occurrence of a specified string value, searching backwards from the specified position in a string.</li></ul><ul class="details"><li><a href="#String.match" style="font-weight:bold;">match</a><b>(_regexp)</b> - Searches for a specified value in a string.</li></ul><ul class="details"><li><a href="#String.replace" style="font-weight:bold;">replace</a><b>(_regexp, _replacement)</b> - Replaces some characters with some other characters in a string.</li></ul><ul class="details"><li><a href="#String.search" style="font-weight:bold;">search</a><b>(_regexp)</b> - Searches a string for a specified value. Returns the position of the specified value in the string. If no match was found it returns -1.</li></ul><ul class="details"><li><a href="#String.slice" style="font-weight:bold;">slice</a><b>(_start, _end)</b> - Extracts a part of a string and returns the extracted part in a new string.</li></ul><ul class="details"><li><a href="#String.split" style="font-weight:bold;">split</a><b>(_delimiter, _limit)</b> - Splits a string into an array of strings.</li></ul><ul class="details"><li><a href="#String.substr" style="font-weight:bold;">substr</a><b>(_start, _length)</b> - Extracts a specified number of characters in a string, from a start index.</li></ul><ul class="details"><li><a href="#String.substring" style="font-weight:bold;">substring</a><b>(_from, _to)</b> - Extracts the characters in a string between two specified indices.</li></ul><ul class="details"><li><a href="#String.toLowerCase" style="font-weight:bold;">toLowerCase</a><b>()</b> - Displays a string in lowercase letters.</li></ul><ul class="details"><li><a href="#String.toUpperCase" style="font-weight:bold;">toUpperCase</a><b>()</b> - Displays a string in uppercase letters.</li></ul><ul class="details"><li><a href="#String.encodeURI" style="font-weight:bold;">encodeURI</a><b>()</b> - Calls encodeURI native on the global object.</li></ul><ul class="details"><li><a href="#String.encodeURIComponent" style="font-weight:bold;">encodeURIComponent</a><b>()</b> - Calls encodeURIComponent native on the global object.</li></ul><ul class="details"><li><a href="#String.decodeURI" style="font-weight:bold;">decodeURI</a><b>()</b> - Calls decodeURI native on the global object.</li></ul><ul class="details"><li><a href="#String.decodeURIComponent" style="font-weight:bold;">decodeURIComponent</a><b>()</b> - Calls decodeURIComponent native on the global object.</li></ul><ul class="details"><li><a href="#String.escape" style="font-weight:bold;">escape</a><b>()</b> - Calls escape native on the global object.</li></ul><ul class="details"><li><a href="#String.unescape" style="font-weight:bold;">unescape</a><b>()</b> - Calls unescape native on the global object.</li></ul><ul class="details"><li><a href="#String.each" style="font-weight:bold;">each</a><b>(_delimiter)</b> - Required by the jsx.collections.Enumerable mixin. Calls String#iterator(_delimiter, _block) passing a {Object}value and {Number}index to the block.</li></ul><ul class="details"><li><a href="#String.iterator" style="font-weight:bold;">iterator</a><b>(_delimiter, _block)</b> - Iterates through the String array created by String#split, executing the _block and passing a value from String.array[index] as its parameter. Used by String#each(_block).</li></ul><ul class="details"><li><a href="#String.trim" style="font-weight:bold;">trim</a><b>()</b> - Returns a new string without spaces on either side.</li></ul><ul class="details"><li><a href="#String.escapeHTML" style="font-weight:bold;">escapeHTML</a><b>()</b> - Returns a new string escaping HTML reserved characters.</li></ul><ul class="details"><li><a href="#String.unescapeHTML" style="font-weight:bold;">unescapeHTML</a><b>()</b> - Returns a new string unescaping HTML reserved characters.</li></ul><ul class="details"><li><a href="#String.startsWith" style="font-weight:bold;">startsWith</a><b>(_string)</b> - Returns whether the string starts with the specified string paramerter.</li></ul><ul class="details"><li><a href="#String.endsWith" style="font-weight:bold;">endsWith</a><b>(_string)</b> - Returns whether the string ends with the specified string paramerter.</li></ul><ul class="details"><li><a href="#String.has" style="font-weight:bold;">has</a><b>(_string)</b> - Returns whether the string has the specified string paramerter within it's contents.</li></ul><ul class="details"><li><a href="#String.reverse" style="font-weight:bold;">reverse</a><b>()</b> - Returns a new string but in reverse order from the original string.</li></ul><ul class="details"><li><a href="#String.truncate" style="font-weight:bold;">truncate</a><b>(_length)</b> - Truncates the string to the specified length. Returns a new string.</li></ul><ul class="details"><li><a href="#String.capitalize" style="font-weight:bold;">capitalize</a><b>()</b> - Returns a new string capitalizing the original string.</li></ul><ul class="details"><li><a href="#String.camelCase" style="font-weight:bold;">camelCase</a><b>()</b> - Returns a new string camel casing the original hyphen or snake case string. Ex. background-image or background_image -> backgroundImage.</li></ul><ul class="details"><li><a href="#String.hyphenCase" style="font-weight:bold;">hyphenCase</a><b>()</b> - Returns a new string hyphen casing the original camel case string. Ex. backgroundImage -> background-image.</li></ul><ul class="details"><li><a href="#String.snakeCase" style="font-weight:bold;">snakeCase</a><b>()</b> - Returns a new string snake casing the original camel case string. Ex. backgroundImage -> background_image.</li></ul><ul class="details"><li><a href="#String.isUpperCase" style="font-weight:bold;">isUpperCase</a><b>()</b> - Returns whether the string has all up cased characters.</li></ul><ul class="details"><li><a href="#String.isLowerCase" style="font-weight:bold;">isLowerCase</a><b>()</b> - Returns whether the string has all lower cased characters.</li></ul><ul class="details"><li><a href="#String.isBlank" style="font-weight:bold;">isBlank</a><b>()</b> - Returns whether the string is blank. Space, tab, new line, carriage return are consider empty.</li></ul><ul class="details"><li><a href="#String.isEmpty" style="font-weight:bold;">isEmpty</a><b>()</b> - Returns whether the string is empty, where this.length == 0.</li></ul><ul class="details"><li><a href="#String.getClass" style="font-weight:bold;">getClass</a><b>()</b></li></ul></div><div class="sectionHead">Namespaces</div><a name="const_summary"></a><div class="sectionHead">Functions</div><a name="functions_summary"></a><div class="section function"><div class="itemTitle"><a name="String.fromCharCode"></a>																				String.fromCharCode(<span class="signature">_numX</span>)														</div><div class="desc">Takes the specified Unicode values and returns a string. String.fromCharCode is a class method of the String class.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type"></td><td>							_numX						</td><td>							String.fromCharCode(numX,numX,...,numX) allowed.						</td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.charAt"></a><i></i>charAt(<span class="signature">_index</span>)																			</div><div class="desc">Returns the character at a specified position.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Number						</td><td>							_index						</td><td></td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.charCodeAt"></a><i></i>charCodeAt(<span class="signature">_index</span>)																			</div><div class="desc">Returns the Unicode of the character at a specified position.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Number						</td><td>							_index						</td><td></td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Number						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.concat"></a><i></i>concat(<span class="signature"></span>)																			</div><div class="desc">Joins two or more strings.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							String						</td><td>							_string.						</td><td>							String#concat(stringX,stringX,...,stringX) allowed.						</td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.indexOf"></a><i></i>indexOf(<span class="signature">_string, _start</span>)																			</div><div class="desc">Returns the position of the first occurrence of a specified string value in a string.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							String						</td><td>							_string						</td><td>							Specifies a string value to search for.						</td></tr><tr><td class="type">							Number						</td><td>							_start<a title="optional parameter" class="type">?</a></td><td>							Specifies where to start the search.						</td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Number						</td><td>							This method returns -1 if the string value to search for never occurs.						</td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.lastIndexOf"></a><i></i>lastIndexOf(<span class="signature">_string, _start</span>)																			</div><div class="desc">Returns the position of the last occurrence of a specified string value, searching backwards from the specified position in a string.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							String						</td><td>							_string						</td><td>							Specifies a string value to search for.						</td></tr><tr><td class="type">							Number						</td><td>							_start<a title="optional parameter" class="type">?</a></td><td>							Specifies where to start the search.						</td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Number						</td><td>							This method returns -1 if the string value to search for never occurs.						</td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.match"></a><i></i>match(<span class="signature">_regexp</span>)																			</div><div class="desc">Searches for a specified value in a string.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							String						</td><td>							_regexp						</td><td>							Could be /'string'/ or new RegExp("string").						</td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.replace"></a><i></i>replace(<span class="signature">_regexp, _replacement</span>)																			</div><div class="desc">Replaces some characters with some other characters in a string.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							String						</td><td>							_regexp						</td><td>							Could be /'string'/ or new RegExp("string").						</td></tr><tr><td class="type">							String						</td><td>							_replacement						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.search"></a><i></i>search(<span class="signature">_regexp</span>)																			</div><div class="desc">Searches a string for a specified value. Returns the position of the specified value in the string. If no match was found it returns -1.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							String						</td><td>							_regexp						</td><td>							Could be /'string'/ or new RegExp("string").						</td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Number						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.slice"></a><i></i>slice(<span class="signature">_start, _end</span>)																			</div><div class="desc">Extracts a part of a string and returns the extracted part in a new string.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Number						</td><td>							_start						</td><td>							Specify where to start the selection.						</td></tr><tr><td class="type">							Number						</td><td>							_end						</td><td>							Specify where to end the selection.						</td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.split"></a><i></i>split(<span class="signature">_delimiter, _limit</span>)																			</div><div class="desc">Splits a string into an array of strings.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							String						</td><td>							_delimiter						</td><td>							Specifies the character, regular expression, or substring that is used to determine where to split the string. Could be /'string'/ or new RegExp("string").						</td></tr><tr><td class="type">							Number						</td><td>							_limit<a title="optional parameter" class="type">?</a></td><td>							Specify how many times split should occur. Must be a numeric value.						</td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Array						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.substr"></a><i></i>substr(<span class="signature">_start, _length</span>)																			</div><div class="desc">Extracts a specified number of characters in a string, from a start index.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Number						</td><td>							_start						</td><td>							Where to start the extraction.						</td></tr><tr><td class="type">							Number						</td><td>							_length<a title="optional parameter" class="type">?</a></td><td>							How many characters to extract.						</td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.substring"></a><i></i>substring(<span class="signature">_from, _to</span>)																			</div><div class="desc">Extracts the characters in a string between two specified indices.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Number						</td><td>							_from						</td><td>							Where to start the extraction.						</td></tr><tr><td class="type">							Number						</td><td>							_to<a title="optional parameter" class="type">?</a></td><td>							Where to end the extraction.						</td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.toLowerCase"></a><i></i>toLowerCase(<span class="signature"></span>)																			</div><div class="desc">Displays a string in lowercase letters.</div></div><div class="section function"><div class="itemTitle"><a name="String.toUpperCase"></a><i></i>toUpperCase(<span class="signature"></span>)																			</div><div class="desc">Displays a string in uppercase letters.</div></div><div class="section function"><div class="itemTitle"><a name="String.encodeURI"></a><i></i>encodeURI(<span class="signature"></span>)																			</div><div class="desc">Calls encodeURI native on the global object.</div></div><div class="section function"><div class="itemTitle"><a name="String.encodeURIComponent"></a><i></i>encodeURIComponent(<span class="signature"></span>)																			</div><div class="desc">Calls encodeURIComponent native on the global object.</div></div><div class="section function"><div class="itemTitle"><a name="String.decodeURI"></a><i></i>decodeURI(<span class="signature"></span>)																			</div><div class="desc">Calls decodeURI native on the global object.</div></div><div class="section function"><div class="itemTitle"><a name="String.decodeURIComponent"></a><i></i>decodeURIComponent(<span class="signature"></span>)																			</div><div class="desc">Calls decodeURIComponent native on the global object.</div></div><div class="section function"><div class="itemTitle"><a name="String.escape"></a><i></i>escape(<span class="signature"></span>)																			</div><div class="desc">Calls escape native on the global object.</div></div><div class="section function"><div class="itemTitle"><a name="String.unescape"></a><i></i>unescape(<span class="signature"></span>)																			</div><div class="desc">Calls unescape native on the global object.</div></div><div class="section function"><div class="itemTitle"><a name="String.each"></a><i></i>each(<span class="signature">_delimiter</span>)																			</div><div class="desc">Required by the jsx.collections.Enumerable mixin. Calls String#iterator(_delimiter, _block) passing a {Object}value and {Number}index to the block.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							String						</td><td>							_delimiter						</td><td>							Specifies the character, regular expression, or substring that is used to determine where to split the string.						</td></tr><tr><td class="type">							Function						</td><td>							_block.						</td><td>							Parameters passed to the _block are {Object}array[index] and the {Number}index.						</td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.iterator"></a><i></i>iterator(<span class="signature">_delimiter, _block</span>)																			</div><div class="desc">Iterates through the String array created by String#split, executing the _block and passing a value from String.array[index] as its parameter. Used by String#each(_block).</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Function						</td><td>							_delimiter						</td><td></td></tr><tr><td class="type">							Function						</td><td>							_block						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.trim"></a><i></i>trim(<span class="signature"></span>)																			</div><div class="desc">Returns a new string without spaces on either side.</div><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.escapeHTML"></a><i></i>escapeHTML(<span class="signature"></span>)																			</div><div class="desc">Returns a new string escaping HTML reserved characters.</div><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.unescapeHTML"></a><i></i>unescapeHTML(<span class="signature"></span>)																			</div><div class="desc">Returns a new string unescaping HTML reserved characters.</div><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.startsWith"></a><i></i>startsWith(<span class="signature">_string</span>)																			</div><div class="desc">Returns whether the string starts with the specified string paramerter.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							String						</td><td>							_string						</td><td></td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Boolean						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.endsWith"></a><i></i>endsWith(<span class="signature">_string</span>)																			</div><div class="desc">Returns whether the string ends with the specified string paramerter.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							String						</td><td>							_string						</td><td></td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Boolean						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.has"></a><i></i>has(<span class="signature">_string</span>)																			</div><div class="desc">Returns whether the string has the specified string paramerter within it's contents.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							String						</td><td>							_string						</td><td></td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Boolean						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.reverse"></a><i></i>reverse(<span class="signature"></span>)																			</div><div class="desc">Returns a new string but in reverse order from the original string.</div><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.truncate"></a><i></i>truncate(<span class="signature">_length</span>)																			</div><div class="desc">Truncates the string to the specified length. Returns a new string.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Number						</td><td>							_length						</td><td>							The length to truncate the string to.						</td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.capitalize"></a><i></i>capitalize(<span class="signature"></span>)																			</div><div class="desc">Returns a new string capitalizing the original string.</div><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.camelCase"></a><i></i>camelCase(<span class="signature"></span>)																			</div><div class="desc">Returns a new string camel casing the original hyphen or snake case string. Ex. background-image or background_image -> backgroundImage.</div><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.hyphenCase"></a><i></i>hyphenCase(<span class="signature"></span>)																			</div><div class="desc">Returns a new string hyphen casing the original camel case string. Ex. backgroundImage -> background-image.</div><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.snakeCase"></a><i></i>snakeCase(<span class="signature"></span>)																			</div><div class="desc">Returns a new string snake casing the original camel case string. Ex. backgroundImage -> background_image.</div><div class="detailHead">returns</div><table class="params"><tr><td class="type">							String						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.isUpperCase"></a><i></i>isUpperCase(<span class="signature"></span>)																			</div><div class="desc">Returns whether the string has all up cased characters.</div><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Boolean						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.isLowerCase"></a><i></i>isLowerCase(<span class="signature"></span>)																			</div><div class="desc">Returns whether the string has all lower cased characters.</div><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Boolean						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.isBlank"></a><i></i>isBlank(<span class="signature"></span>)																			</div><div class="desc">Returns whether the string is blank. Space, tab, new line, carriage return are consider empty.</div><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Boolean						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.isEmpty"></a><i></i>isEmpty(<span class="signature"></span>)																			</div><div class="desc">Returns whether the string is empty, where this.length == 0.</div><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Boolean						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="String.getName"></a>																				String.getName(<span class="signature"></span>)														</div></div><div class="section function"><div class="itemTitle"><a name="String.getClass"></a><i></i>getClass(<span class="signature"></span>)																			</div></div><div class="sectionHead">Properties</div><a name="objects_summary"></a><div class="section object"><div class="itemTitle"><a name="length"></a><span class="type">Number </span>																					length														</div><div class="desc">Returns the number of characters in a string.</div></div><div class="section object"><div class="itemTitle"><a name="String.DIGIT"></a>																										String.DIGIT														</div><div class="desc">Returns 0123456789.</div></div><div class="section object"><div class="itemTitle"><a name="String.ALPHA_UPPER_CASE"></a>																										String.ALPHA_UPPER_CASE														</div><div class="desc">Returns ABCDEFGHIJKLMNOPQRSTUVWXYZ.</div></div><div class="section object"><div class="itemTitle"><a name="String.ALPHA_LOWER_CASE"></a>																										String.ALPHA_LOWER_CASE														</div><div class="desc">Returns abcdefghijklmnopqrstuvwxyz.</div></div><div class="section object"><div class="itemTitle"><a name="String.ALPHA"></a>																										String.ALPHA														</div><div class="desc">Returns ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.</div></div><div class="section object"><div class="itemTitle"><a name="String.ALPHA_NUMERIC"></a>																										String.ALPHA_NUMERIC														</div><div class="desc">Returns 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.</div></div></div></div><div class="finePrint">	Generated by <a href="http://jsdoctoolkit.org/" target="_blank">JsDoc Toolkit</a> with 1.4.1 and  Spicey Template 1.0.3 on Mon, 28 Jul 2008 00:56:57 GMT	</div></body></html>