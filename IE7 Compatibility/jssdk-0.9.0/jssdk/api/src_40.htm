<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"> <style>
	.KEYW {color: #933;}
	.COMM {color: #bbb; font-style: italic;}
	.NUMB {color: #393;}
	.STRN {color: #393;}
	.REGX {color: #339;}
	.linenumber {border-right: 1px dotted #666; color: #666; font-style: normal;}
	</style></head><body><pre><span class='linenumber'>  1</span> <span class="WHIT">
<span class='linenumber'>  2</span> 	</span><span class="COMM">/**
<span class='linenumber'>  3</span> 	* @fileOverview
<span class='linenumber'>  4</span> 	* @example
<span class='linenumber'>  5</span> 	*/</span><span class="WHIT">
<span class='linenumber'>  6</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>  7</span> 	* @class Class
<span class='linenumber'>  8</span> 	* @constructor
<span class='linenumber'>  9</span> 	* @param {String} _fqClassName Fully Qualified Class Name
<span class='linenumber'> 10</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 11</span> 	</span><span class="NAME">jsx.lang.Class</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="NAME">this.initialize.apply</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">arguments</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 12</span> </span><span class="WHIT">
<span class='linenumber'> 13</span> </span><span class="WHIT">	</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 14</span> 	</span><span class="NAME">jsx.lang.Class.prototype.initialize</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_fqClassName</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 15</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 16</span> </span><span class="WHIT">		</span><span class="NAME">jsx.lang.Class.CLASSES</span><span class="PUNC">[</span><span class="WHIT"> </span><span class="NAME">jsx.lang.Class.CLASSES.length</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">_fqClassName</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 17</span> 
<span class='linenumber'> 18</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">_theClass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 19</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 20</span> </span><span class="WHIT">		</span><span class="NAME">this._pakage</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 21</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 22</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this._getClass</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">PACKAGE</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 23</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 24</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 25</span> </span><span class="WHIT">		</span><span class="NAME">this._className</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 26</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 27</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this._getClass</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">CLASS</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 28</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 29</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 30</span> </span><span class="WHIT">		</span><span class="NAME">this._superClassName</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 31</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 32</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this._getClass</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">SUPER_CLASS</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 33</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 34</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 35</span> </span><span class="WHIT">		</span><span class="NAME">this._classes</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 36</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 37</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this._getClass</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">IMPORTS</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 38</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 39</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 40</span> </span><span class="WHIT">		</span><span class="NAME">this._interfaces</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 41</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 42</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this._getClass</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">INTERFACES</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 43</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 44</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 45</span> </span><span class="WHIT">		</span><span class="NAME">this._mixins</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 46</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 47</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this._getClass</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">MIXINS</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 48</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 49</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 50</span> </span><span class="WHIT">		</span><span class="NAME">this._warnings</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 51</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 52</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this._getClass</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">WARNINGS</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 53</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 54</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 55</span> </span><span class="WHIT">		</span><span class="NAME">this._getClass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 56</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 57</span> </span><span class="WHIT">			</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="PUNC">!</span><span class="NAME">_theClass</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 58</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 59</span> </span><span class="WHIT">				</span><span class="NAME">_theClass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">_fqClassName</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 60</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 61</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">_theClass</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 62</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 63</span> 
<span class='linenumber'> 64</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">isPointingToNonEnumProp</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_prop</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 65</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 66</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">_prop.indexOf</span><span class="PUNC">(</span><span class="NAME">jsx.lang.Class.PROP_PREFIX</span><span class="PUNC">)</span><span class="PUNC">==</span><span class="NUMB">0</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">_prop.lastIndexOf</span><span class="PUNC">(</span><span class="NAME">jsx.lang.Class.PROP_SUFFIX</span><span class="PUNC">)</span><span class="PUNC">==</span><span class="PUNC">(</span><span class="NAME">_prop.length</span><span class="PUNC">-</span><span class="NUMB">2</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 67</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 68</span> 
<span class='linenumber'> 69</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">cleanNonEnumProp</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_prop</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 70</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 71</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">newProp</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">_prop.replace</span><span class="PUNC">(</span><span class="NAME">jsx.lang.Class.PROP_PREFIX</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">""</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 72</span> </span><span class="WHIT">			</span><span class="NAME">newProp</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">newProp.replace</span><span class="PUNC">(</span><span class="NAME">jsx.lang.Class.PROP_SUFFIX</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">""</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 73</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">newProp</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 74</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 75</span> 
<span class='linenumber'> 76</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">argumentsToParameters</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_arguments</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 77</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 78</span> </span><span class="WHIT">			</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="PUNC">!</span><span class="NAME">_arguments</span><span class="WHIT"> </span><span class="PUNC">||</span><span class="WHIT"> </span><span class="PUNC">!</span><span class="NAME">_arguments.length</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="STRN">""</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 79</span> 
<span class='linenumber'> 80</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">paramsStr</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">""</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 81</span> </span><span class="WHIT">			</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">&lt;</span><span class="NAME">_arguments.length</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 82</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 83</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">_arguments</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">getClass</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">equals</span><span class="PUNC">(</span><span class="NAME">String.klass</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 84</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 85</span> </span><span class="WHIT">					</span><span class="NAME">paramsStr</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"'"</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="NAME">_arguments</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="WHIT"> </span><span class="STRN">"'"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 86</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 87</span> </span><span class="WHIT">				</span><span class="KEYW">else</span><span class="WHIT">
<span class='linenumber'> 88</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 89</span> </span><span class="WHIT">					</span><span class="NAME">paramsStr</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">_arguments</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 90</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 91</span> 
<span class='linenumber'> 92</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">i</span><span class="WHIT"> </span><span class="PUNC">&lt;</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">_arguments.length</span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="NAME">paramsStr</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">", "</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 93</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 94</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">paramsStr</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 95</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 96</span> 
<span class='linenumber'> 97</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 98</span> </span><span class="WHIT">		</span><span class="NAME">this.__toClasses__</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_classes</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 99</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>100</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">klasses</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>101</span> </span><span class="WHIT">			</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">&lt;</span><span class="NAME">_classes.length</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>102</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>103</span> </span><span class="WHIT">				</span><span class="NAME">klasses</span><span class="PUNC">[</span><span class="NAME">klasses.length</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">_classes</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">klass</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>104</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>105</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">klasses</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>106</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>107</span> 
<span class='linenumber'>108</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>109</span> </span><span class="WHIT">		</span><span class="NAME">this.__toMethod__</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_name</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">_function</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>110</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>111</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">parse</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">f</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>112</span> </span><span class="WHIT">				</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">func</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="PUNC">}</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>113</span> </span><span class="WHIT">				</span><span class="NAME">func.name</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">_name</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>114</span> </span><span class="WHIT">				</span><span class="NAME">func.parameters</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>115</span> </span><span class="WHIT">				</span><span class="NAME">func.body</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">""</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>116</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">f</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>117</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>118</span> </span><span class="WHIT">					</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">s</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">f.toString</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>119</span> </span><span class="WHIT">					</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">params</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">s.substring</span><span class="PUNC">(</span><span class="NAME">s.indexOf</span><span class="PUNC">(</span><span class="STRN">'('</span><span class="PUNC">)</span><span class="PUNC">+</span><span class="NUMB">1</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">s.indexOf</span><span class="PUNC">(</span><span class="STRN">')'</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>120</span> </span><span class="WHIT">					</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">params</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>121</span> </span><span class="WHIT">					</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>122</span> </span><span class="WHIT">						</span><span class="NAME">params</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">params.replace</span><span class="PUNC">(</span><span class="REGX">/\s+/g</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">""</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">split</span><span class="PUNC">(</span><span class="STRN">","</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>123</span> </span><span class="WHIT">					</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>124</span> </span><span class="WHIT">					</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">&lt;</span><span class="NAME">params.length</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>125</span> </span><span class="WHIT">					</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>126</span> </span><span class="WHIT">						</span><span class="NAME">func.parameters</span><span class="PUNC">[</span><span class="NAME">func.parameters.length</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">params</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>127</span> </span><span class="WHIT">					</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>128</span> 
<span class='linenumber'>129</span> </span><span class="WHIT">					</span><span class="NAME">func.body</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">s.substring</span><span class="PUNC">(</span><span class="NAME">s.indexOf</span><span class="PUNC">(</span><span class="STRN">'{'</span><span class="PUNC">)</span><span class="PUNC">+</span><span class="NUMB">1</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">s.lastIndexOf</span><span class="PUNC">(</span><span class="STRN">'}'</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">replace</span><span class="PUNC">(</span><span class="REGX">/(^\s*)|(\s*$)/g</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">""</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>130</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>131</span> </span><span class="WHIT">				</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">func</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>132</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>133</span> 
<span class='linenumber'>134</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">parsedFunc</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">parse</span><span class="PUNC">(</span><span class="NAME">_function</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>135</span> 
<span class='linenumber'>136</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>137</span> </span><span class="WHIT">					</span><span class="NAME">name</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">parsedFunc.name</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>138</span> </span><span class="WHIT">					</span><span class="NAME">parameters</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">parsedFunc.parameters</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>139</span> </span><span class="WHIT">					</span><span class="NAME">body</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">parsedFunc.body</span><span class="WHIT">
<span class='linenumber'>140</span> </span><span class="WHIT">					</span><span class="PUNC">}</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>141</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>142</span> 
<span class='linenumber'>143</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>144</span> </span><span class="WHIT">		</span><span class="NAME">this.__toMethdsString__</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_methodAry</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>145</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>146</span> </span><span class="WHIT">			</span><span class="NAME">_methodAry.sort</span><span class="PUNC">(</span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">a</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">b</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>147</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>148</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">a.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">&lt;</span><span class="WHIT"> </span><span class="NAME">b.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>149</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">a.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NAME">b.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NUMB">0</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>150</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">a.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">></span><span class="WHIT"> </span><span class="NAME">b.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NUMB">1</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>151</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>152</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">methodsStr</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">""</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>153</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">j</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NUMB">1</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>154</span> </span><span class="WHIT">			</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">&lt;</span><span class="NAME">_methodAry.length</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>155</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>156</span> </span><span class="WHIT">				</span><span class="NAME">methodsStr</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">_methodAry</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>157</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">i</span><span class="WHIT"> </span><span class="PUNC">&lt;</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">_methodAry.length</span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="NAME">methodsStr</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">", "</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>158</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">j</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NUMB">15</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="NAME">methodsStr</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"\n"</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="NAME">j</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="KEYW">else</span><span class="PUNC">{</span><span class="NAME">j</span><span class="PUNC">++</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>159</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>160</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">methodsStr</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>161</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>162</span> 
<span class='linenumber'>163</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>164</span> </span><span class="WHIT">		</span><span class="NAME">this.__toFieldsString__</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_fieldAry</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>165</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>166</span> </span><span class="WHIT">			</span><span class="NAME">_fieldAry.sort</span><span class="PUNC">(</span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">a</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">b</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>167</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>168</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">a.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">&lt;</span><span class="WHIT"> </span><span class="NAME">b.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>169</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">a.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NAME">b.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NUMB">0</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>170</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">a.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">></span><span class="WHIT"> </span><span class="NAME">b.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NUMB">1</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>171</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>172</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">fieldsStr</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">""</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>173</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">j</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NUMB">1</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>174</span> </span><span class="WHIT">			</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">&lt;</span><span class="NAME">_fieldAry.length</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>175</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>176</span> </span><span class="WHIT">				</span><span class="NAME">fieldsStr</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">_fieldAry</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>177</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">i</span><span class="WHIT"> </span><span class="PUNC">&lt;</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">_fieldAry.length</span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="NAME">fieldsStr</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">", "</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>178</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">j</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NUMB">15</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="NAME">fieldsStr</span><span class="WHIT"> </span><span class="PUNC">+</span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"\n"</span><span class="PUNC">;</span><span class="WHIT"> </span><span class="NAME">j</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="KEYW">else</span><span class="PUNC">{</span><span class="NAME">j</span><span class="PUNC">++</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>179</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>180</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">fieldsStr</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>181</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>182</span> 
<span class='linenumber'>183</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>184</span> </span><span class="WHIT">		</span><span class="NAME">this.__getMethods__</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">declared</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>185</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>186</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">me</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">this</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>187</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">__getMeth__</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_prop</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">_container</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">isstatic</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>188</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>189</span> </span><span class="WHIT">				</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">meth</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="PUNC">}</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>190</span> </span><span class="WHIT">				</span><span class="NAME">meth._$_</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">isstatic</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>191</span> </span><span class="WHIT">				</span><span class="COMM">//meth.methodToParse = _container[_prop];</span><span class="WHIT">
<span class='linenumber'>192</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">isPointingToNonEnumProp</span><span class="PUNC">(</span><span class="NAME">_prop</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>193</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>194</span> </span><span class="WHIT">					</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">nativeProp</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">cleanNonEnumProp</span><span class="PUNC">(</span><span class="NAME">_prop</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>195</span> </span><span class="WHIT">					</span><span class="NAME">meth.prop</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">nativeProp</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>196</span> </span><span class="WHIT">					</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">me._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="STRN">"Math"</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>197</span> </span><span class="WHIT">					</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>198</span> </span><span class="WHIT">						</span><span class="NAME">meth.method</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">me._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">+</span><span class="STRN">".prototype"</span><span class="PUNC">)</span><span class="PUNC">[</span><span class="NAME">meth.prop</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>199</span> </span><span class="WHIT">					</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>200</span> </span><span class="WHIT">					</span><span class="KEYW">else</span><span class="WHIT">
<span class='linenumber'>201</span> </span><span class="WHIT">					</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>202</span> </span><span class="WHIT">						</span><span class="NAME">meth.method</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">me._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">[</span><span class="NAME">meth.prop</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>203</span> </span><span class="WHIT">					</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>204</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>205</span> </span><span class="WHIT">				</span><span class="KEYW">else</span><span class="WHIT">
<span class='linenumber'>206</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>207</span> </span><span class="WHIT">					</span><span class="NAME">meth.prop</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">_prop</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>208</span> </span><span class="WHIT">					</span><span class="NAME">meth.method</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">_container</span><span class="PUNC">[</span><span class="NAME">meth.prop</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>209</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>210</span> </span><span class="WHIT">				</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">meth</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>211</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>212</span> 
<span class='linenumber'>213</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">clazz</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">this._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>214</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">arry</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>215</span> 
<span class='linenumber'>216</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">cprototype</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">clazz.prototype</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>217</span> </span><span class="WHIT">			</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="WHIT"> </span><span class="KEYW">in</span><span class="WHIT"> </span><span class="NAME">cprototype</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>218</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>219</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="KEYW">typeof</span><span class="WHIT"> </span><span class="NAME">cprototype</span><span class="PUNC">[</span><span class="NAME">prop</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="STRN">"function"</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">jsx.lang.Class.PROTOTYPE_PROPS.indexOf</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>220</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>221</span> </span><span class="WHIT">					</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">declared</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>222</span> </span><span class="WHIT">					</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>223</span> </span><span class="WHIT">						</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="STRN">"getClass"</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">continue</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>224</span> </span><span class="WHIT">						</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="PUNC">!</span><span class="NAME">cprototype.hasOwnProperty</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">continue</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>225</span> </span><span class="WHIT">					</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>226</span> </span><span class="WHIT">					</span><span class="NAME">arry</span><span class="PUNC">[</span><span class="NAME">arry.length</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">__getMeth__</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">cprototype</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">false</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>227</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>228</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>229</span> 
<span class='linenumber'>230</span> </span><span class="WHIT">			</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="WHIT"> </span><span class="KEYW">in</span><span class="WHIT"> </span><span class="NAME">clazz</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>231</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>232</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="KEYW">typeof</span><span class="WHIT"> </span><span class="NAME">clazz</span><span class="PUNC">[</span><span class="NAME">prop</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="STRN">"function"</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">jsx.lang.Class.OBJECT_METHODS.indexOf</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>233</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>234</span> </span><span class="WHIT">					</span><span class="NAME">arry</span><span class="PUNC">[</span><span class="NAME">arry.length</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">__getMeth__</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">clazz</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">true</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>235</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>236</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>237</span> 
<span class='linenumber'>238</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">methods</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="WHIT">
<span class='linenumber'>239</span> </span><span class="WHIT">			</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">&lt;</span><span class="NAME">arry.length</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>240</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>241</span> </span><span class="WHIT">				</span><span class="NAME">methods</span><span class="PUNC">[</span><span class="NAME">methods.length</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>242</span> </span><span class="WHIT">										</span><span class="NAME">__meth__</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">arry</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">method</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>243</span> </span><span class="WHIT">										</span><span class="NAME">__cmethod__</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">this.__toMethod__</span><span class="PUNC">(</span><span class="NAME">arry</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">prop</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">arry</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">method</span><span class="PUNC">)</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>244</span> </span><span class="WHIT">										</span><span class="NAME">__static__</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">arry</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">_$_</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>245</span> </span><span class="WHIT">										</span><span class="NAME">getDeclaringClass</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">me</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>246</span> </span><span class="WHIT">										</span><span class="NAME">getName</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__cmethod__.name</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>247</span> </span><span class="WHIT">										</span><span class="NAME">isStatic</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__static__</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>248</span> </span><span class="WHIT">										</span><span class="NAME">getParameters</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__cmethod__.parameters</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>249</span> </span><span class="WHIT">										</span><span class="NAME">getBody</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__cmethod__.body</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>250</span> </span><span class="WHIT">										</span><span class="NAME">invoke</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_obj</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">_params</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>251</span> </span><span class="WHIT">										</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>252</span> </span><span class="WHIT">											</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="PUNC">!</span><span class="NAME">_obj</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>253</span> </span><span class="WHIT">											</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>254</span> </span><span class="WHIT">												</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">me._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">+</span><span class="STRN">"."</span><span class="PUNC">+</span><span class="NAME">this.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">+</span><span class="STRN">"("</span><span class="PUNC">+</span><span class="NAME">argumentsToParameters</span><span class="PUNC">(</span><span class="NAME">_params</span><span class="PUNC">)</span><span class="PUNC">+</span><span class="STRN">")"</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>255</span> </span><span class="WHIT">											</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>256</span> </span><span class="WHIT">											</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="PUNC">!</span><span class="NAME">_params</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="NAME">_params</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>257</span> </span><span class="WHIT">											</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__meth__.apply</span><span class="PUNC">(</span><span class="NAME">_obj</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">_params</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>258</span> </span><span class="WHIT">										</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>259</span> </span><span class="WHIT">									</span><span class="PUNC">}</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>260</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>261</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">methods</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>262</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>263</span> 
<span class='linenumber'>264</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>265</span> </span><span class="WHIT">		</span><span class="NAME">this.__getFields__</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">declared</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>266</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>267</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">me</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">this</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>268</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">__getField__</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_prop</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">_container</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">isstatic</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>269</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>270</span> </span><span class="WHIT">				</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">field</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="PUNC">}</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>271</span> </span><span class="WHIT">				</span><span class="NAME">field._$_</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">isstatic</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>272</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">isPointingToNonEnumProp</span><span class="PUNC">(</span><span class="NAME">_prop</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>273</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>274</span> </span><span class="WHIT">					</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">nativeProp</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">cleanNonEnumProp</span><span class="PUNC">(</span><span class="NAME">_prop</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>275</span> </span><span class="WHIT">					</span><span class="NAME">field.prop</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">nativeProp</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>276</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>277</span> </span><span class="WHIT">				</span><span class="KEYW">else</span><span class="WHIT">
<span class='linenumber'>278</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>279</span> </span><span class="WHIT">					</span><span class="NAME">field.prop</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">_prop</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>280</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>281</span> </span><span class="WHIT">				</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">field</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>282</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>283</span> 
<span class='linenumber'>284</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">clazz</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">this._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>285</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">arry</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>286</span> 
<span class='linenumber'>287</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">cprototype</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">clazz.prototype</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>288</span> </span><span class="WHIT">			</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="WHIT"> </span><span class="KEYW">in</span><span class="WHIT"> </span><span class="NAME">cprototype</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>289</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>290</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="KEYW">typeof</span><span class="WHIT"> </span><span class="NAME">cprototype</span><span class="PUNC">[</span><span class="NAME">prop</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="STRN">"function"</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>291</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>292</span> </span><span class="WHIT">					</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">declared</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>293</span> </span><span class="WHIT">					</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>294</span> </span><span class="WHIT">						</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="PUNC">!</span><span class="NAME">cprototype.hasOwnProperty</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">continue</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>295</span> </span><span class="WHIT">					</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>296</span> </span><span class="WHIT">					</span><span class="NAME">arry</span><span class="PUNC">[</span><span class="NAME">arry.length</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">__getField__</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">cprototype</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">false</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>297</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>298</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>299</span> 
<span class='linenumber'>300</span> </span><span class="WHIT">			</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="WHIT"> </span><span class="KEYW">in</span><span class="WHIT"> </span><span class="NAME">clazz</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>301</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>302</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="KEYW">typeof</span><span class="WHIT"> </span><span class="NAME">clazz</span><span class="PUNC">[</span><span class="NAME">prop</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="STRN">"function"</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">jsx.lang.Class.CLASS_PROPS.indexOf</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>303</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>304</span> </span><span class="WHIT">					</span><span class="NAME">arry</span><span class="PUNC">[</span><span class="NAME">arry.length</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">__getField__</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">clazz</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="KEYW">true</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>305</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>306</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>307</span> 
<span class='linenumber'>308</span> </span><span class="WHIT">			</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">fields</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="WHIT">
<span class='linenumber'>309</span> </span><span class="WHIT">			</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">&lt;</span><span class="NAME">arry.length</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>310</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>311</span> </span><span class="WHIT">				</span><span class="NAME">fields</span><span class="PUNC">[</span><span class="NAME">fields.length</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>312</span> </span><span class="WHIT">										</span><span class="NAME">__name__</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">arry</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">prop</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>313</span> </span><span class="WHIT">										</span><span class="NAME">__static__</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="NAME">arry</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">_$_</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>314</span> </span><span class="WHIT">										</span><span class="NAME">getDeclaringClass</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">me</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>315</span> </span><span class="WHIT">										</span><span class="NAME">getName</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__name__</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>316</span> </span><span class="WHIT">										</span><span class="NAME">isStatic</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__static__</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>317</span> </span><span class="WHIT">										</span><span class="NAME">getValue</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_obj</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>318</span> </span><span class="WHIT">										</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>319</span> </span><span class="WHIT">											</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="PUNC">!</span><span class="NAME">_obj</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>320</span> </span><span class="WHIT">											</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>321</span> </span><span class="WHIT">												</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">me._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">+</span><span class="STRN">"."</span><span class="PUNC">+</span><span class="NAME">this.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>322</span> </span><span class="WHIT">											</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>323</span> </span><span class="WHIT">											</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">_obj</span><span class="PUNC">[</span><span class="NAME">this.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>324</span> </span><span class="WHIT">										</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>325</span> </span><span class="WHIT">									</span><span class="PUNC">}</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>326</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>327</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">fields</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>328</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>329</span> 
<span class='linenumber'>330</span> </span><span class="WHIT">		</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>331</span> </span><span class="WHIT">		</span><span class="NAME">this.__newInstance__</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">args</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>332</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>333</span> </span><span class="WHIT">			</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">jsx.lang.Class.CORE_CLASSES.indexOf</span><span class="PUNC">(</span><span class="NAME">this._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">==</span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>334</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>335</span> </span><span class="WHIT">				</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">newObject</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="STRN">"new "</span><span class="PUNC">+</span><span class="NAME">this._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">+</span><span class="STRN">"()"</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>336</span> </span><span class="WHIT">				</span><span class="NAME">newObject.initialize.apply</span><span class="PUNC">(</span><span class="NAME">newObject</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">args</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>337</span> </span><span class="WHIT">				</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">newObject</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>338</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>339</span> 
<span class='linenumber'>340</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="STRN">"new "</span><span class="PUNC">+</span><span class="NAME">this._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">+</span><span class="STRN">"("</span><span class="PUNC">+</span><span class="NAME">argumentsToParameters</span><span class="PUNC">(</span><span class="NAME">args</span><span class="PUNC">)</span><span class="PUNC">+</span><span class="STRN">")"</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>341</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>342</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>343</span> 
<span class='linenumber'>344</span> </span><span class="WHIT">	</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>345</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.CLASS_PROPS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="STRN">"prototype"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"PACKAGE"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"CLASS"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"SUPER_CLASS"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"IMPORTS"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"INTERFACES"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"MIXINS"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"WARNINGS"</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>346</span> </span><span class="WHIT">	</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>347</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.PROTOTYPE_PROPS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="STRN">"constructor"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"initialize"</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>348</span> </span><span class="WHIT">	</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>349</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.CORE_CLASSES</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="STRN">"Array"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"Boolean"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"Date"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"Function"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"Math"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"Number"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"Object"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"RegExp"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"String"</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>350</span> </span><span class="WHIT">	</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>351</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.OBJECT_METHODS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="STRN">"respondsTo"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"equals"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"_$toString$_"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="STRN">"getClass"</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>352</span> 
<span class='linenumber'>353</span> </span><span class="WHIT">	</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>354</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.CLASSES</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>355</span> 
<span class='linenumber'>356</span> </span><span class="WHIT">	</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>357</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.PROP_PREFIX</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"_$"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>358</span> </span><span class="WHIT">	</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'>359</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.PROP_SUFFIX</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"$_"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>360</span> 
<span class='linenumber'>361</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>362</span> 	* Returns the Class object of the _fqclassName parameter.
<span class='linenumber'>363</span> 	* @return {jsx.lang.Class}
<span class='linenumber'>364</span> 	*/</span><span class="WHIT">
<span class='linenumber'>365</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.forName</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_fqclassName</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>366</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>367</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">_fqclassName</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">klass</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>368</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>369</span> 
<span class='linenumber'>370</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>371</span> 	* Returns the string name for the class.
<span class='linenumber'>372</span> 	* @return {String}
<span class='linenumber'>373</span> 	*/</span><span class="WHIT">
<span class='linenumber'>374</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getName</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>375</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>376</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>377</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>378</span> 
<span class='linenumber'>379</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>380</span> 	* Returns the super class of this class.
<span class='linenumber'>381</span> 	* @return {jsx.lang.Class}
<span class='linenumber'>382</span> 	*/</span><span class="WHIT">
<span class='linenumber'>383</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getSuperclass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>384</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>385</span> </span><span class="WHIT">		</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="PUNC">!</span><span class="NAME">this._superClassName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>386</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>387</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">Object.klass</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>388</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>389</span> </span><span class="WHIT">		</span><span class="KEYW">else</span><span class="WHIT">
<span class='linenumber'>390</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>391</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">this._superClassName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">klass</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>392</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>393</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>394</span> 
<span class='linenumber'>395</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>396</span> 	* Returns an array of Field objects.
<span class='linenumber'>397</span> 	* @return {Array}
<span class='linenumber'>398</span> 	*/</span><span class="WHIT">
<span class='linenumber'>399</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getFields</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>400</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>401</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__getFields__</span><span class="PUNC">(</span><span class="KEYW">false</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>402</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>403</span> 
<span class='linenumber'>404</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>405</span> 	* Returns a Field object for this class.
<span class='linenumber'>406</span> 	* @example
<span class='linenumber'>407</span> 	The Field object has the following methods.
<span class='linenumber'>408</span> 
<span class='linenumber'>409</span> 	//From any jsx.lang.Class object (String.klass or "test".getClass()) you can get the Field object.
<span class='linenumber'>410</span> 	&lt;code>var _field = String.klass.getField("length");&lt;/code>
<span class='linenumber'>411</span> 
<span class='linenumber'>412</span> 	//Returns the name of the jsx.lang.Class that the Field belongs to.
<span class='linenumber'>413</span> 	&lt;code>_field.getDeclaringClass();&lt;/code>
<span class='linenumber'>414</span> 
<span class='linenumber'>415</span> 	//Returns the name of the field.
<span class='linenumber'>416</span> 	&lt;code>_field.getName();&lt;/code>
<span class='linenumber'>417</span> 
<span class='linenumber'>418</span> 	//Returns whether the field is STATIC.
<span class='linenumber'>419</span> 	&lt;code>_field.isStatic();&lt;/code>
<span class='linenumber'>420</span> 
<span class='linenumber'>421</span> 	//Returns the value of the field. If a parameter object is passed, this method will return the value for the Instance.
<span class='linenumber'>422</span> 	//If no paramerter object is passed, this method will return the value for the class.
<span class='linenumber'>423</span> 	&lt;code>_field.getValue(_object);&lt;/code>
<span class='linenumber'>424</span> 	* @param {String} _name
<span class='linenumber'>425</span> 	* @return {Object}
<span class='linenumber'>426</span> 	*/</span><span class="WHIT">
<span class='linenumber'>427</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getField</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_name</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>428</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>429</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">_fields</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.getFields</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>430</span> </span><span class="WHIT">		</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">&lt;</span><span class="NAME">_fields.length</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>431</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>432</span> </span><span class="WHIT">			</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">_fields</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NAME">_name</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>433</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>434</span> </span><span class="WHIT">				</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">_fields</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>435</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>436</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>437</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>438</span> 
<span class='linenumber'>439</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>440</span> 	* Returns a string of all the fields.
<span class='linenumber'>441</span> 	* @return {String}
<span class='linenumber'>442</span> 	*/</span><span class="WHIT">
<span class='linenumber'>443</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.showFields</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>444</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>445</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__toFieldsString__</span><span class="PUNC">(</span><span class="NAME">this.getFields</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>446</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>447</span> 
<span class='linenumber'>448</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>449</span> 	* Returns an array of Field objects only declared in this class.
<span class='linenumber'>450</span> 	* @return {Array}
<span class='linenumber'>451</span> 	*/</span><span class="WHIT">
<span class='linenumber'>452</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getDeclaredFields</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>453</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>454</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__getFields__</span><span class="PUNC">(</span><span class="KEYW">true</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>455</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>456</span> 
<span class='linenumber'>457</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>458</span> 	* Returns a Field object only declared in this class.
<span class='linenumber'>459</span> 	* @param {String} _name
<span class='linenumber'>460</span> 	* @return {Object} See getField(_name) for object details.
<span class='linenumber'>461</span> 	*/</span><span class="WHIT">
<span class='linenumber'>462</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getDeclaredField</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_name</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>463</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>464</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">_fields</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.getDeclaredFields</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>465</span> </span><span class="WHIT">		</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">&lt;</span><span class="NAME">_fields.length</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>466</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>467</span> </span><span class="WHIT">			</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">_fields</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NAME">_name</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>468</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>469</span> </span><span class="WHIT">				</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">_fields</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>470</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>471</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>472</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>473</span> 
<span class='linenumber'>474</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>475</span> 	* Returns a string of all the fields only declared in this class.
<span class='linenumber'>476</span> 	* @return {String}
<span class='linenumber'>477</span> 	*/</span><span class="WHIT">
<span class='linenumber'>478</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.showDeclaredFields</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>479</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>480</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__toFieldsString__</span><span class="PUNC">(</span><span class="NAME">this.getDeclaredFields</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>481</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>482</span> 
<span class='linenumber'>483</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>484</span> 	* Returns an array of Method objects.
<span class='linenumber'>485</span> 	* @return {Array}
<span class='linenumber'>486</span> 	*/</span><span class="WHIT">
<span class='linenumber'>487</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getMethods</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>488</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>489</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__getMethods__</span><span class="PUNC">(</span><span class="KEYW">false</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>490</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>491</span> 
<span class='linenumber'>492</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>493</span> 	* Returns a Method object for this class.
<span class='linenumber'>494</span> 	* @example
<span class='linenumber'>495</span> 	The Method object has the following methods.
<span class='linenumber'>496</span> 
<span class='linenumber'>497</span> 	//From any jsx.lang.Class object (String.klass or "test".getClass()) you can get the Method object.
<span class='linenumber'>498</span> 	&lt;code>var _method = String.klass.getMethod("match");&lt;/code>
<span class='linenumber'>499</span> 
<span class='linenumber'>500</span> 	//Returns the name of the jsx.lang.Class that the Method belongs to.
<span class='linenumber'>501</span> 	&lt;code>_method.getDeclaringClass();&lt;/code>
<span class='linenumber'>502</span> 
<span class='linenumber'>503</span> 	//Returns the name of the method.
<span class='linenumber'>504</span> 	&lt;code>_method.getName();&lt;/code>
<span class='linenumber'>505</span> 
<span class='linenumber'>506</span> 	//Returns whether the method is STATIC.
<span class='linenumber'>507</span> 	&lt;code>_method.isStatic();&lt;/code>
<span class='linenumber'>508</span> 
<span class='linenumber'>509</span> 	//Returns an array of parameters for the method.
<span class='linenumber'>510</span> 	&lt;code>_method.getParameters();&lt;/code>
<span class='linenumber'>511</span> 
<span class='linenumber'>512</span> 	//Returns the code body of the method.
<span class='linenumber'>513</span> 	&lt;code>_method.getBody();&lt;/code>
<span class='linenumber'>514</span> 
<span class='linenumber'>515</span> 	//Invokes the method. Return object based on the method definition.
<span class='linenumber'>516</span> 	//The _obj parameter is the context object and the _params(Array) parameter is passed to the method.
<span class='linenumber'>517</span> 	//If _obj is null the method is invoked as a class level method.
<span class='linenumber'>518</span> 	&lt;code>_method.invoke(_obj, _params);&lt;/code>
<span class='linenumber'>519</span> 	* @param {String} _name
<span class='linenumber'>520</span> 	* @return {Object}
<span class='linenumber'>521</span> 	*/</span><span class="WHIT">
<span class='linenumber'>522</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getMethod</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_name</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>523</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>524</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">_methods</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.getMethods</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>525</span> </span><span class="WHIT">		</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">&lt;</span><span class="NAME">_methods.length</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>526</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>527</span> </span><span class="WHIT">			</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">_methods</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NAME">_name</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>528</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>529</span> </span><span class="WHIT">				</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">_methods</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>530</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>531</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>532</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>533</span> 
<span class='linenumber'>534</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>535</span> 	* Returns a string of all the methods.
<span class='linenumber'>536</span> 	* @return {String}
<span class='linenumber'>537</span> 	*/</span><span class="WHIT">
<span class='linenumber'>538</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.showMethods</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>539</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>540</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__toMethdsString__</span><span class="PUNC">(</span><span class="NAME">this.getMethods</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>541</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>542</span> 
<span class='linenumber'>543</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>544</span> 	* Returns an array of Method objects only declared in this class.
<span class='linenumber'>545</span> 	* @return {Array}
<span class='linenumber'>546</span> 	*/</span><span class="WHIT">
<span class='linenumber'>547</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getDeclaredMethods</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>548</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>549</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__getMethods__</span><span class="PUNC">(</span><span class="KEYW">true</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>550</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>551</span> 
<span class='linenumber'>552</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>553</span> 	* Returns a Method object only declared in this class.
<span class='linenumber'>554</span> 	* @param {String} _name
<span class='linenumber'>555</span> 	* @return {Object} See getMethod(_name) for object details.
<span class='linenumber'>556</span> 	*/</span><span class="WHIT">
<span class='linenumber'>557</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getDeclaredMethod</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_name</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>558</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>559</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">_methods</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.getDeclaredMethods</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>560</span> </span><span class="WHIT">		</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">&lt;</span><span class="NAME">_methods.length</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>561</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>562</span> </span><span class="WHIT">			</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">_methods</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NAME">_name</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>563</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>564</span> </span><span class="WHIT">				</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">_methods</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>565</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>566</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>567</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>568</span> 
<span class='linenumber'>569</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>570</span> 	* Returns a string of all the methods only declared in this class.
<span class='linenumber'>571</span> 	* @return {String}
<span class='linenumber'>572</span> 	*/</span><span class="WHIT">
<span class='linenumber'>573</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.showDeclaredMethods</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>574</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>575</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__toMethdsString__</span><span class="PUNC">(</span><span class="NAME">this.getDeclaredMethods</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>576</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>577</span> 
<span class='linenumber'>578</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>579</span> 	* Returns a Constructor object for this class.
<span class='linenumber'>580</span> 	* @example
<span class='linenumber'>581</span> 	The Constructor object has the following methods.
<span class='linenumber'>582</span> 
<span class='linenumber'>583</span> 	//From any jsx.lang.Class object (String.klass or "test".getClass()) you can get the Constructor object.
<span class='linenumber'>584</span> 	var _constructor = String.klass.getConstructor();
<span class='linenumber'>585</span> 
<span class='linenumber'>586</span> 	//Returns a jsx.lang.Class object.
<span class='linenumber'>587</span> 	_constructor.getDeclaringClass();
<span class='linenumber'>588</span> 
<span class='linenumber'>589</span> 	//Returns a array of parameters for the constructor.
<span class='linenumber'>590</span> 	_constructor.getParameters();
<span class='linenumber'>591</span> 
<span class='linenumber'>592</span> 	//Returns the code body of the constructor.
<span class='linenumber'>593</span> 	_constructor.getBody();
<span class='linenumber'>594</span> 
<span class='linenumber'>595</span> 	//Returns a new Instance of this class. Pass any number of parameters.
<span class='linenumber'>596</span> 	_constructor.newInstance();
<span class='linenumber'>597</span> 	* @return {Object}
<span class='linenumber'>598</span> 	*/</span><span class="WHIT">
<span class='linenumber'>599</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getConstructor</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>600</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>601</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">me</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">this</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>602</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">cmethod</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.__toMethod__</span><span class="PUNC">(</span><span class="STRN">"initialize"</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">this._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">prototype.initialize</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>603</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>604</span> </span><span class="WHIT">				</span><span class="NAME">getDeclaringClass</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">me</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>605</span> </span><span class="WHIT">				</span><span class="NAME">getParameters</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">cmethod.parameters</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>606</span> </span><span class="WHIT">				</span><span class="NAME">getBody</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">cmethod.body</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>607</span> </span><span class="WHIT">				</span><span class="NAME">newInstance</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>608</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>609</span> </span><span class="WHIT">					</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">me.__newInstance__</span><span class="PUNC">(</span><span class="NAME">arguments</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>610</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>611</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>612</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>613</span> 
<span class='linenumber'>614</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>615</span> 	* Returns a Package object for this class.
<span class='linenumber'>616</span> 	* @example
<span class='linenumber'>617</span> 	The Package object has the following methods.
<span class='linenumber'>618</span> 
<span class='linenumber'>619</span> 	//From any jsx.lang.Class object (String.klass or "test".getClass()) you can get the Package object.
<span class='linenumber'>620</span> 	var _package = String.klass.getPackage();
<span class='linenumber'>621</span> 
<span class='linenumber'>622</span> 	//Returns the name of the package.
<span class='linenumber'>623</span> 	_package.getName();
<span class='linenumber'>624</span> 
<span class='linenumber'>625</span> 	//Returns an array of jsx.lang.Class objects that exist in the package.
<span class='linenumber'>626</span> 	_package.getClasses();
<span class='linenumber'>627</span> 	* @return {Object}
<span class='linenumber'>628</span> 	*/</span><span class="WHIT">
<span class='linenumber'>629</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getPackage</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>630</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>631</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">me</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">this</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>632</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>633</span> </span><span class="WHIT">			</span><span class="NAME">getName</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="WHIT"> </span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">me._pakage</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="PUNC">,</span><span class="WHIT">
<span class='linenumber'>634</span> </span><span class="WHIT">			</span><span class="NAME">getClasses</span><span class="WHIT"> </span><span class="PUNC">:</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>635</span> </span><span class="WHIT">			</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>636</span> </span><span class="WHIT">				</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">pakageClasses</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>637</span> </span><span class="WHIT">				</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">pkg</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>638</span> </span><span class="WHIT">				</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">pkg</span><span class="WHIT"> </span><span class="PUNC">&&</span><span class="WHIT"> </span><span class="NAME">pkg</span><span class="WHIT"> </span><span class="PUNC">!=</span><span class="WHIT"> </span><span class="STRN">"jsx.lang"</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>639</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>640</span> </span><span class="WHIT">					</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">pakageObj</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">pkg</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>641</span> </span><span class="WHIT">					</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="WHIT"> </span><span class="KEYW">in</span><span class="WHIT"> </span><span class="NAME">pakageObj</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>642</span> </span><span class="WHIT">					</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>643</span> </span><span class="WHIT">						</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="STRN">"klass"</span><span class="WHIT"> </span><span class="KEYW">in</span><span class="WHIT"> </span><span class="NAME">pakageObj</span><span class="PUNC">[</span><span class="NAME">prop</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>644</span> </span><span class="WHIT">						</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>645</span> </span><span class="WHIT">							</span><span class="NAME">pakageClasses</span><span class="PUNC">[</span><span class="NAME">pakageClasses.length</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">pakageObj</span><span class="PUNC">[</span><span class="NAME">prop</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">klass</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>646</span> </span><span class="WHIT">						</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>647</span> </span><span class="WHIT">					</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>648</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>649</span> </span><span class="WHIT">				</span><span class="KEYW">else</span><span class="WHIT">
<span class='linenumber'>650</span> </span><span class="WHIT">				</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>651</span> </span><span class="WHIT">					</span><span class="COMM">//get all the Global Objects, they don't have a namespace</span><span class="WHIT">
<span class='linenumber'>652</span> </span><span class="WHIT">					</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">i</span><span class="PUNC">=</span><span class="NUMB">0</span><span class="PUNC">;</span><span class="NAME">i</span><span class="WHIT"> </span><span class="PUNC">&lt;</span><span class="WHIT"> </span><span class="NAME">jsx.lang.Class.CORE_CLASSES.length</span><span class="PUNC">;</span><span class="NAME">i</span><span class="PUNC">++</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>653</span> </span><span class="WHIT">					</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>654</span> </span><span class="WHIT">						</span><span class="NAME">pakageClasses</span><span class="PUNC">[</span><span class="NAME">pakageClasses.length</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="NAME">jsx.lang.Class.CORE_CLASSES</span><span class="PUNC">[</span><span class="NAME">i</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">klass</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>655</span> </span><span class="WHIT">					</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>656</span> </span><span class="WHIT">					</span><span class="COMM">// get all classes in jsx.lang namespace</span><span class="WHIT">
<span class='linenumber'>657</span> </span><span class="WHIT">					</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">pakageObj</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">eval</span><span class="PUNC">(</span><span class="STRN">"jsx.lang"</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>658</span> </span><span class="WHIT">					</span><span class="KEYW">for</span><span class="PUNC">(</span><span class="NAME">prop</span><span class="WHIT"> </span><span class="KEYW">in</span><span class="WHIT"> </span><span class="NAME">pakageObj</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>659</span> </span><span class="WHIT">					</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>660</span> </span><span class="WHIT">						</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="STRN">"klass"</span><span class="WHIT"> </span><span class="KEYW">in</span><span class="WHIT"> </span><span class="NAME">pakageObj</span><span class="PUNC">[</span><span class="NAME">prop</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>661</span> </span><span class="WHIT">						</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>662</span> </span><span class="WHIT">							</span><span class="NAME">pakageClasses</span><span class="PUNC">[</span><span class="NAME">pakageClasses.length</span><span class="PUNC">]</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">pakageObj</span><span class="PUNC">[</span><span class="NAME">prop</span><span class="PUNC">]</span><span class="PUNC">.</span><span class="NAME">klass</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>663</span> </span><span class="WHIT">						</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>664</span> </span><span class="WHIT">					</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>665</span> </span><span class="WHIT">				</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>666</span> </span><span class="WHIT">				</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">pakageClasses</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>667</span> </span><span class="WHIT">			</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>668</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>669</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>670</span> 
<span class='linenumber'>671</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>672</span> 	* Returns a new Instance of the class
<span class='linenumber'>673</span> 	* @param parameters Pass any number of parameters. This methods uses the arguments implicit object.
<span class='linenumber'>674</span> 	* @return {Object}
<span class='linenumber'>675</span> 	*/</span><span class="WHIT">
<span class='linenumber'>676</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.newInstance</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>677</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>678</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__newInstance__</span><span class="PUNC">(</span><span class="NAME">arguments</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>679</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>680</span> 
<span class='linenumber'>681</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>682</span> 	* Returns an array of the classes this class has for its imports.
<span class='linenumber'>683</span> 	* @return {Array[jsx.lang.Class]}
<span class='linenumber'>684</span> 	*/</span><span class="WHIT">
<span class='linenumber'>685</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getClasses</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>686</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>687</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__toClasses__</span><span class="PUNC">(</span><span class="NAME">this._classes</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>688</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>689</span> 
<span class='linenumber'>690</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>691</span> 	* Returns an array of the classes this class is implementating.
<span class='linenumber'>692</span> 	* @return {Array[jsx.lang.Class]}
<span class='linenumber'>693</span> 	*/</span><span class="WHIT">
<span class='linenumber'>694</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getInterfaces</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>695</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>696</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__toClasses__</span><span class="PUNC">(</span><span class="NAME">this._interfaces</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>697</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>698</span> 
<span class='linenumber'>699</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>700</span> 	* Returns an array of the classes this class is mixing in.
<span class='linenumber'>701</span> 	* @return {Array[jsx.lang.Class]}
<span class='linenumber'>702</span> 	*/</span><span class="WHIT">
<span class='linenumber'>703</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getMixins</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>704</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>705</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.__toClasses__</span><span class="PUNC">(</span><span class="NAME">this._mixins</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>706</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>707</span> 
<span class='linenumber'>708</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>709</span> 	* Returns whether this class is the child of the _object parameter class.
<span class='linenumber'>710</span> 	* @param {Object} _object
<span class='linenumber'>711</span> 	* @return {Boolean}
<span class='linenumber'>712</span> 	*/</span><span class="WHIT">
<span class='linenumber'>713</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.isChildOf</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>714</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>715</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">_object.getClass</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NAME">this._superClassName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>716</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>717</span> 
<span class='linenumber'>718</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>719</span> 	* Returns whether this class is the parent of the _object parameter class.
<span class='linenumber'>720</span> 	* @param {Object} _object
<span class='linenumber'>721</span> 	* @return {Boolean}
<span class='linenumber'>722</span> 	*/</span><span class="WHIT">
<span class='linenumber'>723</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.isSuperOf</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>724</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>725</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">_object.getClass</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">getSuperclass</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NAME">this._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>726</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>727</span> 
<span class='linenumber'>728</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>729</span> 	* Returns whether the _object parameter is of this class type.
<span class='linenumber'>730</span> 	* @param {Object} _object
<span class='linenumber'>731</span> 	* @return {Boolean}
<span class='linenumber'>732</span> 	*/</span><span class="WHIT">
<span class='linenumber'>733</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.isInstance</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>734</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>735</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">name</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">_object.getClass</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>736</span> 
<span class='linenumber'>737</span> </span><span class="WHIT">		</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">this._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NAME">name</span><span class="WHIT"> </span><span class="PUNC">||</span><span class="WHIT"> </span><span class="NAME">this._superClassName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NAME">name</span><span class="WHIT"> </span><span class="PUNC">||</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">this._interfaces</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">indexOf</span><span class="PUNC">(</span><span class="NAME">name</span><span class="PUNC">)</span><span class="PUNC">></span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">||</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">this._mixins</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">indexOf</span><span class="PUNC">(</span><span class="NAME">name</span><span class="PUNC">)</span><span class="PUNC">></span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>738</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>739</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="KEYW">true</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>740</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>741</span> 
<span class='linenumber'>742</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="KEYW">false</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>743</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>744</span> 
<span class='linenumber'>745</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>746</span> 	* Returns whether this class is implementing the _class parameter.
<span class='linenumber'>747</span> 	* @param {jsx.lang.Class} _object
<span class='linenumber'>748</span> 	* @return {Boolean}
<span class='linenumber'>749</span> 	*/</span><span class="WHIT">
<span class='linenumber'>750</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.isImplementing</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_class</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>751</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>752</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">name</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">_class.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>753</span> 
<span class='linenumber'>754</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">this._interfaces</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">indexOf</span><span class="PUNC">(</span><span class="NAME">name</span><span class="PUNC">)</span><span class="PUNC">></span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>755</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>756</span> 
<span class='linenumber'>757</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>758</span> 	* Returns whether this class is mixing in the _class parameter.
<span class='linenumber'>759</span> 	* @param {jsx.lang.Class} _object
<span class='linenumber'>760</span> 	* @return {Boolean}
<span class='linenumber'>761</span> 	*/</span><span class="WHIT">
<span class='linenumber'>762</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.isMixingIn</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_class</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>763</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>764</span> </span><span class="WHIT">		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">name</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">_class.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>765</span> 
<span class='linenumber'>766</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="NAME">this._mixins</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">.</span><span class="NAME">indexOf</span><span class="PUNC">(</span><span class="NAME">name</span><span class="PUNC">)</span><span class="PUNC">></span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>767</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>768</span> 
<span class='linenumber'>769</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>770</span> 	* Returns the warnings for this class.
<span class='linenumber'>771</span> 	* @return {String}
<span class='linenumber'>772</span> 	*/</span><span class="WHIT">
<span class='linenumber'>773</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.getWarnings</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>774</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>775</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this._warnings</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>776</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>777</span> 
<span class='linenumber'>778</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>779</span> 	* Returns the name of this class.
<span class='linenumber'>780</span> 	* @return {String}
<span class='linenumber'>781</span> 	*/</span><span class="WHIT">
<span class='linenumber'>782</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.toString</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>783</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>784</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>785</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>786</span> 
<span class='linenumber'>787</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'>788</span> 	* Returns whether this object is equal to the specified _object.
<span class='linenumber'>789</span> 	* @param {Object} _object
<span class='linenumber'>790</span> 	* @return {Boolean}
<span class='linenumber'>791</span> 	*/</span><span class="WHIT">
<span class='linenumber'>792</span> </span><span class="WHIT">	</span><span class="NAME">jsx.lang.Class.prototype.equals</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>793</span> </span><span class="WHIT">	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>794</span> </span><span class="WHIT">		</span><span class="KEYW">if</span><span class="WHIT"> </span><span class="PUNC">(</span><span class="KEYW">this</span><span class="WHIT"> </span><span class="PUNC">===</span><span class="WHIT"> </span><span class="NAME">_object</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'>795</span> </span><span class="WHIT">		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'>796</span> </span><span class="WHIT">			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="KEYW">true</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>797</span> </span><span class="WHIT">		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>798</span> 
<span class='linenumber'>799</span> </span><span class="WHIT">		</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="PUNC">!</span><span class="NAME">_object._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="KEYW">false</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>800</span> 
<span class='linenumber'>801</span> </span><span class="WHIT">		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NAME">_object._className</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>802</span> </span><span class="WHIT">	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>803</span> 
<span class='linenumber'>804</span> 
<span class='linenumber'>805</span> </span><span class="NAME">jsx.lang.Class.PACKAGE</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"jsx.lang"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>806</span> </span><span class="NAME">jsx.lang.Class.CLASS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"jsx.lang.Class"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>807</span> </span><span class="NAME">jsx.lang.Class.SUPER_CLASS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">""</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>808</span> </span><span class="NAME">jsx.lang.Class.IMPORTS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>809</span> </span><span class="NAME">jsx.lang.Class.INTERFACES</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>810</span> </span><span class="NAME">jsx.lang.Class.MIXINS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>811</span> </span><span class="NAME">jsx.lang.Class.getName</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">jsx.lang.Class.CLASS</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>812</span> </span><span class="NAME">jsx.lang.Class.klass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">jsx.lang.Class</span><span class="PUNC">(</span><span class="NAME">jsx.lang.Class.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>813</span> </span><span class="NAME">jsx.lang.Class.prototype.getClass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">jsx.lang.Class.klass</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'>814</span> </span><span class="NAME">jsx.lang.Class.WARNINGS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'>815</span> </span></pre></body></html>