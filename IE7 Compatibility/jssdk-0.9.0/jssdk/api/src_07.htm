<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"> <style>
	.KEYW {color: #933;}
	.COMM {color: #bbb; font-style: italic;}
	.NUMB {color: #393;}
	.STRN {color: #393;}
	.REGX {color: #339;}
	.linenumber {border-right: 1px dotted #666; color: #666; font-style: normal;}
	</style></head><body><pre><span class='linenumber'>  1</span> <span class="WHIT">
<span class='linenumber'>  2</span> 	</span><span class="COMM">/**
<span class='linenumber'>  3</span> 	* @fileOverview &lt;code>jsx.collections.Collection&lt;/code> is an Interface class. Defines the methods for base collections.
<span class='linenumber'>  4</span> 	* @example
<span class='linenumber'>  5</span> 	&lt;pre>
<span class='linenumber'>  6</span> 		class MyCollection implements Collection
<span class='linenumber'>  7</span> 	&lt;/pre>
<span class='linenumber'>  8</span> 	*/</span><span class="WHIT">
<span class='linenumber'>  9</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 10</span> 	* @class Collection
<span class='linenumber'> 11</span> 	* @extends jsx.collections.Iterable
<span class='linenumber'> 12</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 13</span> 	</span><span class="NAME">jsx.collections.Collection</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="NAME">this.initialize.apply</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">arguments</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 14</span> </span><span class="NAME">jsx.collections.Collection.prototype</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">jsx.collections.Iterable</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 15</span> </span><span class="NAME">jsx.collections.Collection.prototype.constructor</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">jsx.collections.Collection</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 16</span> </span><span class="NAME">jsx.collections.Collection.superclass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">jsx.collections.Iterable.prototype</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 17</span> </span><span class="WHIT">
<span class='linenumber'> 18</span> </span><span class="WHIT">	</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 19</span> 	</span><span class="NAME">jsx.collections.Collection.prototype.initialize</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 20</span> 
<span class='linenumber'> 21</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 22</span> 	* Add an element to the end of collection. Returns whether the element was added to the collection.
<span class='linenumber'> 23</span> 	* @param {Object} _object The element added to the collection
<span class='linenumber'> 24</span> 	* @return {Boolean}
<span class='linenumber'> 25</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 26</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.Collection.prototype.add</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'Collection.add is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 27</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 28</span> 	* Adds all the elements in the specified collecion to the end of the collection. Returns whether the current collection was modified.
<span class='linenumber'> 29</span> 	* @param {jsx.collections.Collection} _collection
<span class='linenumber'> 30</span> 	* @return {Boolean}
<span class='linenumber'> 31</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 32</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.Collection.prototype.addAll</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_collection</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'Collection.addAll is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 33</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 34</span> 	* Removes all elements in the collection.
<span class='linenumber'> 35</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 36</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.Collection.prototype.clear</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'Collection.clear is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 37</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 38</span> 	* Returns whether the specified object is contained in the collection.
<span class='linenumber'> 39</span> 	* @param {Object} _object Parameter could be null. If there is a null element in the collection, true will be returned.
<span class='linenumber'> 40</span> 	* @return {Boolean}
<span class='linenumber'> 41</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 42</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.Collection.prototype.contains</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'Collection.contains is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 43</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 44</span> 	* Returns whether the elements in the specified collection exist in the collection.
<span class='linenumber'> 45</span> 	* @param {jsx.collections.Collection}
<span class='linenumber'> 46</span> 	* @return {Boolean}
<span class='linenumber'> 47</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 48</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.Collection.prototype.containsAll</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_collection</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'Collection.containsAll is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 49</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 50</span> 	* Returns whether the collection is empty.
<span class='linenumber'> 51</span> 	* @return {Boolean}
<span class='linenumber'> 52</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 53</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.Collection.prototype.isEmpty</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'Collection.isEmpty is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 54</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 55</span> 	* Removes the specified object from the collection. Return whether the object was removed.
<span class='linenumber'> 56</span> 	* @param {Object} _object
<span class='linenumber'> 57</span> 	* @return {Boolean}
<span class='linenumber'> 58</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 59</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.Collection.prototype.remove</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'Collection.remove is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 60</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 61</span> 	* Removes all the elements in the specified collection from the current collection. Returns whether the current collection was modified.
<span class='linenumber'> 62</span> 	* @param {jsx.collections.Collection} _collection
<span class='linenumber'> 63</span> 	* @return {Boolean}
<span class='linenumber'> 64</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 65</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.Collection.prototype.removeAll</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_collection</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'Collection.removeAll is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 66</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 67</span> 	* Removes all elements in the current collection if they are not in the specified collection.
<span class='linenumber'> 68</span> 	*  Returns whether the current collection was modified.
<span class='linenumber'> 69</span> 	* @param {Object} _collection
<span class='linenumber'> 70</span> 	* @return {Boolean}
<span class='linenumber'> 71</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 72</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.Collection.prototype.retainAll</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_collection</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'Collection.retainAll is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 73</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 74</span> 	* Returns the size of the collection.
<span class='linenumber'> 75</span> 	* @return {Number}
<span class='linenumber'> 76</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 77</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.Collection.prototype.size</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'Collection.size is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 78</span> 
<span class='linenumber'> 79</span> 
<span class='linenumber'> 80</span> </span><span class="NAME">jsx.collections.Collection.PACKAGE</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"jsx.collections"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 81</span> </span><span class="NAME">jsx.collections.Collection.CLASS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"jsx.collections.Collection"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 82</span> </span><span class="NAME">jsx.collections.Collection.SUPER_CLASS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"jsx.collections.Iterable"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 83</span> </span><span class="NAME">jsx.collections.Collection.IMPORTS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="STRN">"jsx.collections.Iterable"</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 84</span> </span><span class="NAME">jsx.collections.Collection.INTERFACES</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 85</span> </span><span class="NAME">jsx.collections.Collection.MIXINS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 86</span> </span><span class="NAME">jsx.collections.Collection.getName</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">jsx.collections.Collection.CLASS</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 87</span> </span><span class="NAME">jsx.collections.Collection.klass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">jsx.lang.Class</span><span class="PUNC">(</span><span class="NAME">jsx.collections.Collection.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 88</span> </span><span class="NAME">jsx.collections.Collection.prototype.getClass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">jsx.collections.Collection.klass</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 89</span> </span><span class="NAME">jsx.collections.Collection.WARNINGS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 90</span> </span></pre></body></html>