<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"> <style>
	.KEYW {color: #933;}
	.COMM {color: #bbb; font-style: italic;}
	.NUMB {color: #393;}
	.STRN {color: #393;}
	.REGX {color: #339;}
	.linenumber {border-right: 1px dotted #666; color: #666; font-style: normal;}
	</style></head><body><pre><span class='linenumber'>  1</span> <span class="WHIT">
<span class='linenumber'>  2</span> 	</span><span class="COMM">/**
<span class='linenumber'>  3</span> 	* @fileOverview An implementation of the Stack api that is based on an jsx.collections.ArrayList,
<span class='linenumber'>  4</span> 	* @example
<span class='linenumber'>  5</span> 	*/</span><span class="WHIT">
<span class='linenumber'>  6</span> 	</span><span class="COMM">/**
<span class='linenumber'>  7</span> 	* @class ArrayStack
<span class='linenumber'>  8</span> 	* @constructor
<span class='linenumber'>  9</span> 	* @extends jsx.collections.ArrayList
<span class='linenumber'> 10</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 11</span> 	</span><span class="NAME">jsx.collections.ArrayStack</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="NAME">this.initialize.apply</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">arguments</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 12</span> </span><span class="NAME">jsx.collections.ArrayStack.prototype</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">jsx.collections.ArrayList</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 13</span> </span><span class="NAME">jsx.collections.ArrayStack.prototype.constructor</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">jsx.collections.ArrayStack</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 14</span> </span><span class="NAME">jsx.collections.ArrayStack.superclass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">jsx.collections.ArrayList.prototype</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 15</span> 
<span class='linenumber'> 16</span> 	</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 17</span> 	</span><span class="NAME">jsx.collections.ArrayStack.prototype.initialize</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_collection</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 18</span> 	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 19</span> 		</span><span class="NAME">jsx.collections.ArrayStack.superclass.initialize.apply</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="NAME">_collection</span><span class="PUNC">]</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 20</span> 	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 21</span> 
<span class='linenumber'> 22</span> 	</span><span class="COMM">/**
<span class='linenumber'> 23</span> 	* Return true if this stack is currently empty..
<span class='linenumber'> 24</span> 	* @return {Boolean}
<span class='linenumber'> 25</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 26</span> 	</span><span class="NAME">jsx.collections.ArrayStack.prototype.empty</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 27</span> 	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 28</span> 		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.isEmpty</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 29</span> 	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 30</span> 
<span class='linenumber'> 31</span> 	</span><span class="COMM">/**
<span class='linenumber'> 32</span> 	* Returns the top item off of this stack without removing it.
<span class='linenumber'> 33</span> 	* @return {Object}
<span class='linenumber'> 34</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 35</span> 	</span><span class="NAME">jsx.collections.ArrayStack.prototype.peek</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 36</span> 	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 37</span> 		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">size</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.size</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 38</span> 		</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">size</span><span class="WHIT"> </span><span class="PUNC">==</span><span class="WHIT"> </span><span class="NUMB">0</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 39</span> 		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 40</span> 			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="KEYW">null</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 41</span> 		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 42</span> 
<span class='linenumber'> 43</span> 		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.get</span><span class="PUNC">(</span><span class="NAME">size</span><span class="WHIT"> </span><span class="PUNC">-</span><span class="WHIT"> </span><span class="NUMB">1</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 44</span> 	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 45</span> 
<span class='linenumber'> 46</span> 	</span><span class="COMM">/**
<span class='linenumber'> 47</span> 	* Pops the top item off of this stack and return it.
<span class='linenumber'> 48</span> 	* @return {Object}
<span class='linenumber'> 49</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 50</span> 	</span><span class="NAME">jsx.collections.ArrayStack.prototype.pop</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 51</span> 	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 52</span> 		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">size</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.size</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 53</span> 		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">object</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.peek</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 54</span> 
<span class='linenumber'> 55</span> 		</span><span class="NAME">this.removeAt</span><span class="PUNC">(</span><span class="NAME">size</span><span class="WHIT"> </span><span class="PUNC">-</span><span class="WHIT"> </span><span class="NUMB">1</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 56</span> 
<span class='linenumber'> 57</span> 		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">object</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 58</span> 	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 59</span> 
<span class='linenumber'> 60</span> 	</span><span class="COMM">/**
<span class='linenumber'> 61</span> 	* Pushes a new item onto the top of this stack.
<span class='linenumber'> 62</span> 	* @param {Object}
<span class='linenumber'> 63</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 64</span> 	</span><span class="NAME">jsx.collections.ArrayStack.prototype.push</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 65</span> 	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 66</span> 		</span><span class="NAME">this.add</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 67</span> 	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 68</span> 
<span class='linenumber'> 69</span> 	</span><span class="COMM">/**
<span class='linenumber'> 70</span> 	* Returns the one-based position of the distance from the top that the specified object exists on this stack, where the top-most element is considered to be at distance 1.
<span class='linenumber'> 71</span> 	* @param {Object} _object
<span class='linenumber'> 72</span> 	* @return {Number}
<span class='linenumber'> 73</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 74</span> 	</span><span class="NAME">jsx.collections.ArrayStack.prototype.search</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 75</span> 	</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 76</span> 		</span><span class="KEYW">var</span><span class="WHIT"> </span><span class="NAME">index</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">this.lastIndexOf</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 77</span> 		</span><span class="KEYW">if</span><span class="PUNC">(</span><span class="NAME">index</span><span class="WHIT"> </span><span class="PUNC">></span><span class="WHIT"> </span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">)</span><span class="WHIT">
<span class='linenumber'> 78</span> 		</span><span class="PUNC">{</span><span class="WHIT">
<span class='linenumber'> 79</span> 			</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">this.size</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="WHIT"> </span><span class="PUNC">-</span><span class="WHIT"> </span><span class="NAME">index</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 80</span> 		</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 81</span> 		</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="PUNC">-</span><span class="NUMB">1</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 82</span> 	</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 83</span> 
<span class='linenumber'> 84</span> 
<span class='linenumber'> 85</span> </span><span class="NAME">jsx.collections.ArrayStack.PACKAGE</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"jsx.collections"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 86</span> </span><span class="NAME">jsx.collections.ArrayStack.CLASS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"jsx.collections.ArrayStack"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 87</span> </span><span class="NAME">jsx.collections.ArrayStack.SUPER_CLASS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"jsx.collections.ArrayList"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 88</span> </span><span class="NAME">jsx.collections.ArrayStack.IMPORTS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="STRN">"jsx.collections.ArrayList"</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 89</span> </span><span class="NAME">jsx.collections.ArrayStack.INTERFACES</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 90</span> </span><span class="NAME">jsx.collections.ArrayStack.MIXINS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 91</span> </span><span class="NAME">jsx.collections.ArrayStack.getName</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">jsx.collections.ArrayStack.CLASS</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 92</span> </span><span class="NAME">jsx.collections.ArrayStack.klass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">jsx.lang.Class</span><span class="PUNC">(</span><span class="NAME">jsx.collections.ArrayStack.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 93</span> </span><span class="NAME">jsx.collections.ArrayStack.prototype.getClass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">jsx.collections.ArrayStack.klass</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 94</span> </span><span class="NAME">jsx.collections.ArrayStack.WARNINGS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 95</span> </span></pre></body></html>