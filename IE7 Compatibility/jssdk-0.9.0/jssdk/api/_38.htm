<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><meta name="generator" content="JsDoc Toolkit 1.0"><title>JsDoc: </title><link rel=stylesheet href="css/default.css" type="text/css" media=screen></head><body><div class="content"><div class="docs"><div class="jump">JUMP: [<a href="#const_summary">CONSTRUCTORS</a> ] [ <a href="#functions_summary">FUNCTIONS</a> ] [ <a href="#objects_summary">PROPERTIES</a> ]</div><hr><div class="libHead">Library: Array.js			</div><div class="section overview"><div class="itemTitle">					Overview				</div><div><div class="desc">Array is one of the core classes to native JavaScript. Array mixes in the jsx.collections.Enumerable class which gives Array a lot more functionalilty. See jsx.collections.Enumerable to see all the additional methods on Array.</div><div class="itemTags"><ul><li>source: <a href="src_38.htm">Array.js</a></li><li>example: </li></ul></div></div></div><div class="sectionHead">Constructors</div><a name="const_summary"></a><div class="section constructor"><div class="itemTitle"><a name="Array"></a>																				Array(<span class="signature"></span>)														</div><div class="desc">[built-in]</div><div class="detailHead">methods</div><ul class="details"><li><a href="#Array.concat" style="font-weight:bold;">concat</a><b>(_args)</b> - Joins two or more arrays and returns the result.</li></ul><ul class="details"><li><a href="#Array.join" style="font-weight:bold;">join</a><b>(_sep)</b> - Puts all the elements of an array into a string. The elements are separated by a specified delimiter.</li></ul><ul class="details"><li><a href="#Array.pop" style="font-weight:bold;">pop</a><b>()</b> - Removes and returns the last element of an array.</li></ul><ul class="details"><li><a href="#Array.push" style="font-weight:bold;">push</a><b>(_args)</b> - Adds one or more elements to the end of an array and returns the new length.</li></ul><ul class="details"><li><a href="#Array.reverse" style="font-weight:bold;">reverse</a><b>()</b> - Reverses the order of the elements in an array.</li></ul><ul class="details"><li><a href="#Array.shift" style="font-weight:bold;">shift</a><b>()</b> - Removes and returns the first element of an array.</li></ul><ul class="details"><li><a href="#Array.slice" style="font-weight:bold;">slice</a><b>(_start, _end)</b> - Returns selected elements from an existing array.</li></ul><ul class="details"><li><a href="#Array.sort" style="font-weight:bold;">sort</a><b>(_func)</b> - Sorts the elements of an array.</li></ul><ul class="details"><li><a href="#Array.splice" style="font-weight:bold;">splice</a><b>(_start, _deleteCount, _args)</b> - Removes and adds new elements to an array.</li></ul><ul class="details"><li><a href="#Array.unshift" style="font-weight:bold;">unshift</a><b>(_args1, _args2)</b> - Adds one or more elements to the beginning of an array and returns the new length.</li></ul><ul class="details"><li><a href="#Array.each" style="font-weight:bold;">each</a><b>()</b> - Required by the <code>jsx.collections.Enumerable</code> mixin. Calls <code>Array#iterator(_block)</code> passing a value and index to the block.</li></ul><ul class="details"><li><a href="#Array.iterator" style="font-weight:bold;">iterator</a><b>()</b> - Iterates through the array, executing the _block and passing a value from Array[index] as its parameter. Used by <code>Array#each(_block)</code>.</li></ul><ul class="details"><li><a href="#Array.indexOf" style="font-weight:bold;">indexOf</a><b>(_object)</b> - Returns the index location of the specified _object.</li></ul><ul class="details"><li><a href="#Array.equals" style="font-weight:bold;">equals</a><b>(_object)</b> - Returns whether this object is equal to the specified _object.</li></ul><ul class="details"><li><a href="#Array.getClass" style="font-weight:bold;">getClass</a><b>()</b></li></ul></div><div class="sectionHead">Namespaces</div><a name="const_summary"></a><div class="sectionHead">Functions</div><a name="functions_summary"></a><div class="section function"><div class="itemTitle"><a name="Array.concat"></a><i></i>concat(<span class="signature">_args</span>)																			</div><div class="desc">Joins two or more arrays and returns the result.</div><pre class="code">["Tom", "Dick", "Harry"].concat(["Matt", "Annie", "Sam"]); -> ["Tom", "Dick", "Harry", "Matt", "Annie", "Sam"]</pre><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Array						</td><td>							_args						</td><td>							One or more array objects to be joined to an array. Array#unshift(_args1, _args2,.....,_argsX) allowed.						</td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Array						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.join"></a><i></i>join(<span class="signature">_sep</span>)																			</div><div class="desc">Puts all the elements of an array into a string. The elements are separated by a specified delimiter.</div><pre class="code">["Tom", "Dick", "Harry"].join(" - "); -> "Tom - Dick - Harry"</pre><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							String						</td><td>							_sep<a title="optional parameter" class="type">?</a></td><td>							Specifies the separator to be used. Comma is the default separator.						</td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.pop"></a><i></i>pop(<span class="signature"></span>)																			</div><div class="desc">Removes and returns the last element of an array.</div><pre class="code">["Tom", "Dick", "Harry"].pop(); -> "Harry"</pre><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Object						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.push"></a><i></i>push(<span class="signature">_args</span>)																			</div><div class="desc">Adds one or more elements to the end of an array and returns the new length.</div><pre class="code">["Tom", "Dick", "Harry"].push("Matt"); -> 4, contents = ["Tom", "Dick", "Harry", "Matt"]</pre><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Object						</td><td>							_args						</td><td>							One or more items. Array#push(_args1,.....,_argsX) allowed.						</td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Number						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.reverse"></a><i></i>reverse(<span class="signature"></span>)																			</div><div class="desc">Reverses the order of the elements in an array.</div><pre class="code">["Tom", "Dick", "Harry"].reverse(); -> ["Harry", "Dick", "Tom"]</pre></div><div class="section function"><div class="itemTitle"><a name="Array.shift"></a><i></i>shift(<span class="signature"></span>)																			</div><div class="desc">Removes and returns the first element of an array.</div><pre class="code">["Tom", "Dick", "Harry"].shift(); -> "Tom", contents = ["Dick", "Harry"]</pre><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Object						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.slice"></a><i></i>slice(<span class="signature">_start, _end</span>)																			</div><div class="desc">Returns selected elements from an existing array.</div><pre class="code">["Tom", "Dick", "Harry"].slice(1,3); -> ["Dick", "Harry"]</pre><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Number						</td><td>							_start						</td><td></td></tr><tr><td class="type">							Number						</td><td>							_end<a title="optional parameter" class="type">?</a></td><td></td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Array						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.sort"></a><i></i>sort(<span class="signature">_func</span>)																			</div><div class="desc">Sorts the elements of an array.</div><pre class="code">["Tom", "Dick", "Harry"].sort(); -> ["Dick", "Harry", "Tom"]</pre><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Function						</td><td>							_func<a title="optional parameter" class="type">?</a></td><td>							The block function of the sort implementation						</td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.splice"></a><i></i>splice(<span class="signature">_start, _deleteCount, _args</span>)																			</div><div class="desc">Removes and adds new elements to an array.</div><pre class="code"><div>["Tom", "Dick", "Harry", "Matt", "Annie", "Sam"].splice(2, 0, "Carson"); -> contents = ["Tom", "Dick", "Carson", "Harry", "Matt", "Annie", "Sam"]</div><div>["Tom", "Dick", "Harry", "Matt", "Annie", "Sam"].splice(2, 1, "Carson"); -> contents = ["Tom", "Dick", "Carson", "Matt", "Annie", "Sam"]</div></pre><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Number						</td><td>							_start						</td><td>							Specify where to add/remove elements						</td></tr><tr><td class="type">							Number						</td><td>							_deleteCount						</td><td>							Specify how many elements should be removed. Greater then zero.						</td></tr><tr><td class="type">							Object						</td><td>							_args<a title="optional parameter" class="type">?</a></td><td>							Specify a new element to add to the array. Array#splice(_start, _deleteCount, _args1,.....,_argsX) allowed.						</td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.unshift"></a><i></i>unshift(<span class="signature">_args1, _args2</span>)																			</div><div class="desc">Adds one or more elements to the beginning of an array and returns the new length.</div><pre class="code">["Tom", "Dick", "Harry"].unshift("Matt", "Annie", "Sam"); -> 6, contents = ["Tom", "Dick", "Harry", "Matt", "Annie", "Sam"]</pre><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Object						</td><td>							_args1						</td><td>							The first element to add to the array.						</td></tr><tr><td class="type">							Object						</td><td>							_args2<a title="optional parameter" class="type">?</a></td><td>							The second element to add to the array. Array#unshift(_args1, _args2,.....,_argsX) allowed.						</td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.each"></a><i></i>each(<span class="signature"></span>)																			</div><div class="desc">Required by the <code>jsx.collections.Enumerable</code> mixin. Calls <code>Array#iterator(_block)</code> passing a value and index to the block.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Function						</td><td>							_block.						</td><td>							Parameters passed to the _block are Object and the Number.						</td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.iterator"></a><i></i>iterator(<span class="signature"></span>)																			</div><div class="desc">Iterates through the array, executing the _block and passing a value from Array[index] as its parameter. Used by <code>Array#each(_block)</code>.</div><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Function						</td><td>							_block.						</td><td>							Parameter passed to the _block is the element object at the index.						</td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.indexOf"></a><i></i>indexOf(<span class="signature">_object</span>)																			</div><div class="desc">Returns the index location of the specified _object.</div><pre class="code">["Tom", "Dick", "Harry", "Matt", "Annie", "Sam"].indexOf("Annie"); -> 4</pre><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Object						</td><td>							_object						</td><td></td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Number						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.equals"></a><i></i>equals(<span class="signature">_object</span>)																			</div><div class="desc">Returns whether this object is equal to the specified _object.</div><pre class="code">["Tom", "Dick", "Harry"].equals(["Tom", "Dick", "Harry"]); -> true;</pre><div class="detailHead">parameters</div><table class="params"><tr><td class="type">							Object						</td><td>							_object						</td><td></td></tr></table><div class="detailHead">returns</div><table class="params"><tr><td class="type">							Boolean						</td><td></td></tr></table></div><div class="section function"><div class="itemTitle"><a name="Array.getName"></a>																				Array.getName(<span class="signature"></span>)														</div></div><div class="section function"><div class="itemTitle"><a name="Array.getClass"></a><i></i>getClass(<span class="signature"></span>)																			</div></div><div class="sectionHead">Properties</div><a name="objects_summary"></a><div class="section object"><div class="itemTitle"><a name="length"></a><span class="type">Number </span>																					length														</div><div class="desc">Sets or returns the number of elements in an array.</div></div></div></div><div class="finePrint">	Generated by <a href="http://jsdoctoolkit.org/" target="_blank">JsDoc Toolkit</a> with 1.4.1 and  Spicey Template 1.0.3 on Mon, 28 Jul 2008 00:56:51 GMT	</div></body></html>