<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"> <style>
	.KEYW {color: #933;}
	.COMM {color: #bbb; font-style: italic;}
	.NUMB {color: #393;}
	.STRN {color: #393;}
	.REGX {color: #339;}
	.linenumber {border-right: 1px dotted #666; color: #666; font-style: normal;}
	</style></head><body><pre><span class='linenumber'>  1</span> <span class="WHIT">
<span class='linenumber'>  2</span> 	</span><span class="COMM">/**
<span class='linenumber'>  3</span> 	* @fileOverview &lt;code>jsx.collections.List&lt;/code> is an Interface class. Defines the methods for base lists.
<span class='linenumber'>  4</span> 	* @example
<span class='linenumber'>  5</span> 	&lt;pre>
<span class='linenumber'>  6</span> 		class MyList implements List
<span class='linenumber'>  7</span> 	&lt;/pre>
<span class='linenumber'>  8</span> 	*/</span><span class="WHIT">
<span class='linenumber'>  9</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 10</span> 	* @class List
<span class='linenumber'> 11</span> 	* @extends jsx.collections.Collection
<span class='linenumber'> 12</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 13</span> 	</span><span class="NAME">jsx.collections.List</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="NAME">this.initialize.apply</span><span class="PUNC">(</span><span class="KEYW">this</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">arguments</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 14</span> </span><span class="NAME">jsx.collections.List.prototype</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">jsx.collections.Collection</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 15</span> </span><span class="NAME">jsx.collections.List.prototype.constructor</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">jsx.collections.List</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 16</span> </span><span class="NAME">jsx.collections.List.superclass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="NAME">jsx.collections.Collection.prototype</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 17</span> </span><span class="WHIT">
<span class='linenumber'> 18</span> </span><span class="WHIT">	</span><span class="COMM">/** @ignore */</span><span class="WHIT">
<span class='linenumber'> 19</span> 	</span><span class="NAME">jsx.collections.List.prototype.initialize</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 20</span> 
<span class='linenumber'> 21</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 22</span> 	* Add an element to the list at a specified index. Returns whether the element was added into the list.
<span class='linenumber'> 23</span> 	* @param {Number} _index Number must be >= 0 and &lt; size
<span class='linenumber'> 24</span> 	* @param {Object} _object
<span class='linenumber'> 25</span> 	* @return {Boolean}
<span class='linenumber'> 26</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 27</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.List.prototype.addAt</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_index</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">_object</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'List.addAt is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 28</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 29</span> 	* Add all the elements in the specified collection starting at the specified index. Returns whether the current list was modified.
<span class='linenumber'> 30</span> 	* @param {Number} _index Number must be >= 0 and &lt; the size.
<span class='linenumber'> 31</span> 	* @param {jsx.collections.Collection} _collection
<span class='linenumber'> 32</span> 	* @return {Boolean}
<span class='linenumber'> 33</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 34</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.List.prototype.addAllAt</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_index</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">_collection</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'List.addAllAt is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 35</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 36</span> 	* Returns an element from the list at the specifed index.
<span class='linenumber'> 37</span> 	* @param {Number} _index
<span class='linenumber'> 38</span> 	* @return {Object}
<span class='linenumber'> 39</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 40</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.List.prototype.get</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_index</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'List.get is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 41</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 42</span> 	* Returns the index of the first occurance of the specified object. If the specified object does not exist in the collection, -1 will be returned.
<span class='linenumber'> 43</span> 	* @param {Object} _object
<span class='linenumber'> 44</span> 	* @return {Number] -1 if the object was not found, otherwise the number will be >= 0 and &lt; the size.
<span class='linenumber'> 45</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 46</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.List.prototype.indexOf</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'List.indexOf is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 47</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 48</span> 	* Returns the index of the last occurance of the specified object. If the specified object does not exist in the collection, -1 will be returned.
<span class='linenumber'> 49</span> 	* @param {Object} _object
<span class='linenumber'> 50</span> 	* @return {Number] -1 if the object was not found, otherwise the number will be >= 0 and &lt; the size.
<span class='linenumber'> 51</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 52</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.List.prototype.lastIndexOf</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_object</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'List.lastIndexOf is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 53</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 54</span> 	* Removes and returns the element from the collection at the specifed index.
<span class='linenumber'> 55</span> 	* @param {Number} _index
<span class='linenumber'> 56</span> 	* @return {Object}
<span class='linenumber'> 57</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 58</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.List.prototype.removeAt</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_index</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'List.removeAt is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 59</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 60</span> 	* Assigns the specified object to the collection at the specified index. If an object is already living at the index, it is replaced.
<span class='linenumber'> 61</span> 	* @param {Number} _index
<span class='linenumber'> 62</span> 	* @param {Object} _object
<span class='linenumber'> 63</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 64</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.List.prototype.set</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_index</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">_object</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'List.set is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 65</span> </span><span class="WHIT">	</span><span class="COMM">/**
<span class='linenumber'> 66</span> 	* Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
<span class='linenumber'> 67</span> 	* @param {Number} _fromIndex
<span class='linenumber'> 68</span> 	* @param {Number} _toIndex
<span class='linenumber'> 69</span> 	*/</span><span class="WHIT">
<span class='linenumber'> 70</span> </span><span class="WHIT">	</span><span class="NAME">jsx.collections.List.prototype.subList</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="NAME">_fromIndex</span><span class="PUNC">,</span><span class="WHIT"> </span><span class="NAME">_toIndex</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">throw</span><span class="WHIT"> </span><span class="STRN">'List.subList is abstract'</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 71</span> 
<span class='linenumber'> 72</span> 
<span class='linenumber'> 73</span> </span><span class="NAME">jsx.collections.List.PACKAGE</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"jsx.collections"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 74</span> </span><span class="NAME">jsx.collections.List.CLASS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"jsx.collections.List"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 75</span> </span><span class="NAME">jsx.collections.List.SUPER_CLASS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="STRN">"jsx.collections.Collection"</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 76</span> </span><span class="NAME">jsx.collections.List.IMPORTS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="STRN">"jsx.collections.Collection"</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 77</span> </span><span class="NAME">jsx.collections.List.INTERFACES</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 78</span> </span><span class="NAME">jsx.collections.List.MIXINS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 79</span> </span><span class="NAME">jsx.collections.List.getName</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">jsx.collections.List.CLASS</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 80</span> </span><span class="NAME">jsx.collections.List.klass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">new</span><span class="WHIT"> </span><span class="NAME">jsx.lang.Class</span><span class="PUNC">(</span><span class="NAME">jsx.collections.List.getName</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">)</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 81</span> </span><span class="NAME">jsx.collections.List.prototype.getClass</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="KEYW">function</span><span class="PUNC">(</span><span class="PUNC">)</span><span class="PUNC">{</span><span class="KEYW">return</span><span class="WHIT"> </span><span class="NAME">jsx.collections.List.klass</span><span class="PUNC">;</span><span class="PUNC">}</span><span class="WHIT">
<span class='linenumber'> 82</span> </span><span class="NAME">jsx.collections.List.WARNINGS</span><span class="WHIT"> </span><span class="PUNC">=</span><span class="WHIT"> </span><span class="PUNC">[</span><span class="PUNC">]</span><span class="PUNC">;</span><span class="WHIT">
<span class='linenumber'> 83</span> </span></pre></body></html>