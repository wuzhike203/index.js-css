------------------------------------------------------------------------------
1   {motion}移动命令
------------------------------------------------------------------------------
    1.1     fx          移动当前行的下一个x处(f; 重复上一个f命令)
    1.2     tx          移动到x的左边一个位置
    1.3     Fx          往回找
    1.4     w
    1.5     b
    1.6     o
    1.7     ^
    1.8     $
    1.9     )           移动到下一个句子
    1.10    (           移动到上一个句子
------------------------------------------------------------------------------

二   {range}范围参数
------------------------------------------------------------------------------
------------------------------------------------------------------------------

三   {Visual}范围参数
------------------------------------------------------------------------------
------------------------------------------------------------------------------

四   [count]范围参数
------------------------------------------------------------------------------
------------------------------------------------------------------------------

五   fold
------------------------------------------------------------------------------
// create and delete folds
------------------------------------------------------------------------------
1   zf{motion}/{Visual}zf           创建折叠   
2   zF[count]                       创建折叠
3   :{range}fo(ld)                  创建折叠

4   zd                              删除 鼠标处 一个嵌套层次的折叠(nest)
5   zD                              删除 鼠标处 所有嵌套层次的折叠(nest)
6   zE                              删除 文本中 所有嵌套层次的折叠(nest)
------------------------------------------------------------------------------

------------------------------------------------------------------------------
// open and close folds
------------------------------------------------------------------------------
// 鼠标处
1   zo[count]                       打开 鼠标处 多个嵌套层次的折叠
2   zO                              打开 鼠标处 所有嵌套层次的折叠
3   zc[count]                       关闭 鼠标处 多个嵌套层次的折叠
4   zC                              关闭 鼠标处 所有嵌套层次的折叠
5   za[count]                       开关 鼠标处 多个嵌套层次的折叠
6   zA                              开关 鼠标处 所有嵌套层次的折叠
7   zv                              打开 鼠标处 有限嵌套层次的折叠: 保证鼠标处处于打开状态
8   zx                              
9   zX                              
// 所有的
// fold level
10  zm                              减少 所有的 折叠层次 一层 : set foldlevel - 1
11  zM                              减少 所有的 折叠层次 to 0 : set foldlevel to 0
12  zr                              加大 所有的 折叠层次 一层 : set foldlevel + 1
13  zR                              加大 所有的 折叠层次 最大 : set foldlevel to highest fold level
// :
14  :{range}foldo[pen][!]           打开 一层 折叠(!: 打开所有层次的折叠)
15  :{range}foldc[lose][!]          关闭 一层 折叠(!: 关闭所有层次的折叠)
//
16  zn                              撤销折叠, reset 'foldenable'
17  zN                              恢复折叠到zn之前的水平
18  zi                              反转 zn/zN
------------------------------------------------------------------------------

------------------------------------------------------------------------------
// moving over folds
------------------------------------------------------------------------------
1   [z                              移动到当前打开折叠的开始位置
2   ]z                              移动到当前打开折叠的结束位置
3   zj                              向下移动到下一个折叠的开始位置
4   zk                              向上移动到上一个折叠的结束位置
------------------------------------------------------------------------------


------------------------------------------------------------------------------
// executing commands on folds
// 在折叠处执行命令
------------------------------------------------------------------------------
1   :[range]foldd[oopen] {cmd}      在所有行，除了关闭的折叠处, 执行命令
2   :[range]folddoc[losed] {cmd}    在所有关闭的折叠处, 执行命令
------------------------------------------------------------------------------

------------------------------------------------------------------------------
// fold option
------------------------------------------------------------------------------
1   colors      Folded/FoldColumn
    :highlight  Folded guibg=grey guifg=blue
    :highlight  FoldColumn guibg=grey guifg=blue

2   foldlevel
    foldlevel越低, 折叠越多
    foldlevel is 0, all folds are closed.

3   foldtext

4   foldcolumn  折叠层次的宽度缩进
------------------------------------------------------------------------------


//2016/7/14
vim 颜色配置方案中的颜色代表数字(彩色终端)：
1：darkred
2：darkgreen
3：darkyellow
4：darkblue
5：darkcyan(深紫色)
6：darkcyan(深蓝绿色)
7：灰色
>8：白色

// 16-12-23 14:17:16 vim中插入特殊字符
    1、知道字符编码
        //查看帮助 :h  i_CTRL-V_digit
        //使用 ga 查看光标处的字符编码 
// 16-12-23 14:17:16 vim中插入特殊字符
    1、知道字符编码
        //查看帮助 :h  i_CTRL-V_digit
        //使用 ga 查看光标处的字符编码 
        1.1 非unicode编码的字符
            <C-v>XXX        
            // XXX: 3位的字符编码
            如：<C-v>065: 相当于字母A
        1.2 unicode编码的字符
            <C-v>uXXXX
            如：<C-v>u: 相当于 ¿

    2、知道二合字母
        //查看帮助:h  digraphs-default
        <C-k>{char1}{char2}

        // 几个常见的符号
        char    {char1}{char2}
        ----------------------------
        ©       Co
        ®       Rg
        ±       +-
        µ       My
        ¶       PI
        ¼       14
        ÷       -:
        ‰       %0

        ⅲ       3r 
        Ⅲ       3R
        ㈠      1c
        ㈨      9c

        ←       <-
        →       ->
        ↑       -!
        ↓       -v
        ∠       -V
        ↔       <>          <>
        ↕       UD

        ∆       DE
        ∇       NB
        ░       .S
        ☆       *1
        ★       *2

// 16-12-28 11:40:49 
    vim diff
    ㈠ show different
        1、gvim -d file1 file2
        2、当已经用vim进入file1时
            :vertical diffsplit file2

    ㈡ 在差异间跳转
        向下跳：]c
        向上跳：[c

    ㈢ 有时diff会卡住
        使用:diffupdate 刷新

    ㈣ merge 
        :diffpu(t)
        :diffg(et)
    
        1.1 非unicode编码的字符
            <C-v>XXX        
            // XXX: 3位的字符编码
            如：<C-v>065: 相当于字母A
        1.2 unicode编码的字符
            <C-v>uXXXX
            如：<C-v>u: 相当于 ¿

    2、知道二合字母
        //查看帮助:h  digraphs-default
        <C-k>{char1}{char2}

        // 几个常见的符号
        char    {char1}{char2}
        ----------------------------
        ©       Co
        ®       Rg
        ±       +-
        µ       My
        ¶       PI
        ¼       14
        ÷       -:
        ‰       %0

        ⅲ       3r 
        Ⅲ       3R
        ㈠      1c
        ㈨      9c

        ←       <-
        →       ->
        ↑       -!
        ↓       -v
        ∠       -V
        ↔       <>          <>
        ↕       UD

        ∆       DE
        ∇       NB
        ░       .S
        ☆       *1
        ★       *2

// 16-12-28 11:40:49 
    vim diff
    ㈠ show different
        1、gvim -d file1 file2
        2、当已经用vim进入file1时
            :vertical diffsplit file2

    ㈡ 在差异间跳转
        向下跳：]c
        向上跳：[c

    ㈢ 有时diff会卡住
        使用:diffupdate 刷新

    ㈣ merge 
        :diffpu(t)
        :diffg(et)
    

//linux 下VIM安装
//知识提要
1、使用vim --version 
	查看vim的大部分的安装信息
2、vim的配置文件位置
	//全局配置文件(所有用户都有效)
	2.1先使用vim --version查看vim的主程序目录$vim;则配置文件为：$vim/vimrc
	2.2其他颜色，脚本等文件在$vim/vim73/下
	//用户自个的配置文件(对单个用户有效，优先级最高)
	2.3在用户主目录/home/$user/下的: .vimrc
	2.4/home/$user/下的.vim/目录下

3、linux 安装方式 apt-get   和 源码安装
使用apt-get/yum安装时，有时出现文件不全的现象

4、颜色配置方案中(对GUI，彩色终端cterm,黑白终端term)//对不同的设备，要分别设置
	//window中的vim应该使用GUI,linux下的应该使用cterm


//VIM 命令
:  调用命令模式
r    插入
！调用cmd命令
如：
:r !python xxx.py      //把xxx.py的运行结果插入到vim的当前位置

//VIM查找映射
:verbose map xxx
如：:verbose map <c-r>

//VIM中 插入模式下调用函数和normal模式下不一样
#normal模式下调用函数
exe "nmap <F6> :call " . function-name
//namp <F6> :call function()

#insert
imap <silent> <C-D><C-D> <C-R>=strftime("%e %b %Y")<CR> 
    :表示 在当前位置插入格式化日期 #<C-R>=  插入
imap <silent> <C-T><C-T> <C-R>=strftime("%l:%M %p")<CR>

//插入日期
strftime("%d/%m/%y %H:%M:%S")<cr>

//16-07-26 09:08:16 
使用vim 的 install 命令添加vim到右键菜单
:! install

// 16-08-19 
    在.vimrc中添加以下代码后，重启vim即可实现按TAB产生4个空格：
    set ts=4  (注：ts是tabstop的缩写，设TAB宽4个空格)
    set expandtab

    对于已保存的文件，可以使用下面的方法进行空格和TAB的替换：
    TAB替换为空格：
    :set ts=4
    :set expandtab
    :%retab!

    空格替换为TAB：
    :set ts=4
    :set noexpandtab
    :%retab!

// 16-12-23 14:17:16 vim中插入特殊字符
    1、知道字符编码
        //查看帮助 :h  i_CTRL-V_digit
        //使用 ga 查看光标处的字符编码 
        1.1 非unicode编码的字符
            <C-v>XXX        
            // XXX: 3位的字符编码
            如：<C-v>065: 相当于字母A
        1.2 unicode编码的字符
            <C-v>uXXXX
            如：<C-v>u: 相当于 ¿

    2、知道二合字母
        //查看帮助:h  digraphs-default
        <C-k>{char1}{char2}

        // 几个常见的符号
        char    {char1}{char2}
        ----------------------------
        ©       Co
        ®       Rg
        ±       +-
        µ       My
        ¶       PI
        ¼       14
        ÷       -:
        ‰       %0

        ⅲ       3r 
        Ⅲ       3R
        ㈠      1c
        ㈨      9c

        ←       <-
        →       ->
        ↑       -!
        ↓       -v
        ∠       -V
        ↔       <>          <>
        ↕       UD

        ∆       DE
        ∇       NB
        ░       .S
        ☆       *1
        ★       *2

// 16-12-28 11:40:49 
    vim diff
    ㈠ show different
        1、gvim -d file1 file2
        2、当已经用vim进入file1时
            :vertical diffsplit file2

    ㈡ 在差异间跳转
        向下跳：]c
        向上跳：[c

    ㈢ 有时diff会卡住
        使用:diffupdate 刷新

    ㈣ merge 
        :diffpu(t)
        :diffg(et)
    
